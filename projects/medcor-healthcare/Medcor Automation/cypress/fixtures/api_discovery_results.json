{
  "schema": {
    "status": 200,
    "body": "openapi: 3.0.3\ninfo:\n  title: MedCor Healthcare Platform API\n  version: 2.0.0\n  description: \"\\n# MedCor Healthcare Platform API Documentation\\n\\n## Overview\\n\\\n    MedCor is a comprehensive multi-tenant healthcare management platform that provides\\\n    \\ APIs for hospital management, patient care, appointment scheduling, and medical\\\n    \\ records management.\\n\\n## API Workflow - Getting Started\\n\\n### Step 1: Create\\\n    \\ a Hospital (Tenant)\\nFirst, create a hospital/clinic which serves as the tenant\\\n    \\ in our multi-tenant architecture:\\n- **POST** `/api/hospitals/` - Create a new\\\n    \\ hospital\\n\\n### Step 2: User Registration & Authentication\\nRegister users and\\\n    \\ assign them to hospitals:\\n- **POST** `/api/auth/register/` - Register new user\\\n    \\ (assign to hospital)\\n- **POST** `/api/auth/login/` - Login and get JWT tokens\\n\\\n    \\n### Step 3: Create Core Entities\\nAfter authentication, create the necessary\\\n    \\ entities in order:\\n\\n1. **Doctors & Staff**\\n   - **POST** `/api/auth/users/`\\\n    \\ - Create doctor/nurse/staff accounts\\n   - **POST** `/api/specialty/doctor-specialties/`\\\n    \\ - Assign specialties to doctors\\n\\n2. **Availability & Scheduling**\\n   - **POST**\\\n    \\ `/api/appointments/availability-slots/` - Set doctor availability\\n   - **GET**\\\n    \\ `/api/appointments/availability-slots/` - View available slots\\n\\n3. **Patient\\\n    \\ Management**\\n   - **POST** `/api/auth/users/` - Create patient accounts\\n \\\n    \\  - **POST** `/api/medical-records/` - Create patient medical records\\n\\n4. **Appointments\\\n    \\ & Treatments**\\n   - **POST** `/api/appointments/` - Book appointments\\n   -\\\n    \\ **POST** `/api/treatments/` - Record treatments\\n   - **POST** `/api/treatments/prescriptions/`\\\n    \\ - Issue prescriptions\\n\\n## Authentication\\nAll endpoints (except registration/login)\\\n    \\ require JWT authentication:\\n- Include `Authorization: Bearer <token>` in request\\\n    \\ headers\\n- Tokens expire after 60 minutes\\n- Use refresh token endpoint to get\\\n    \\ new access tokens\\n\\n## Multi-Tenancy\\n- Each hospital is a separate tenant\\n\\\n    - Users are associated with specific hospitals\\n- Data is isolated between hospitals\\n\\\n    - Admin users can manage multiple hospitals\\n\\n## Rate Limiting\\n- 100 requests\\\n    \\ per minute for authenticated users\\n- 20 requests per minute for unauthenticated\\\n    \\ users\\n\\n## Response Formats\\nAll responses follow RESTful conventions with\\\n    \\ appropriate HTTP status codes.\\n    \"\n  contact:\n    name: MedCor Support\n    email: support@medcor.ai\n  license:\n    name: Proprietary\npaths:\n  /api/appointments/appointments/:\n    get:\n      operationId: appointments_appointments_list\n      description: ViewSet for managing appointments.\n      parameters:\n      - in: query\n        name: appointment_type\n        schema:\n          type: string\n          enum:\n          - CONSULTATION\n          - EMERGENCY\n          - FOLLOW_UP\n          - LAB_TEST\n          - ROUTINE_CHECKUP\n          - SURGERY\n          - TELEMEDICINE\n          - THERAPY\n          - VACCINATION\n        description: |-\n          * `CONSULTATION` - Consultation\n          * `FOLLOW_UP` - Follow-up\n          * `ROUTINE_CHECKUP` - Routine Checkup\n          * `EMERGENCY` - Emergency\n          * `TELEMEDICINE` - Telemedicine\n          * `VACCINATION` - Vaccination\n          * `LAB_TEST` - Lab Test\n          * `SURGERY` - Surgery\n          * `THERAPY` - Therapy\n      - in: query\n        name: doctor\n        schema:\n          type: string\n          format: uuid\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - in: query\n        name: patient\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: scheduled_date\n        schema:\n          type: string\n          format: date\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: status\n        schema:\n          type: string\n          enum:\n          - CANCELLED\n          - COMPLETED\n          - IN_PROGRESS\n          - NO_SHOW\n          - RESCHEDULED\n          - SCHEDULED\n        description: |-\n          * `SCHEDULED` - Scheduled\n          * `IN_PROGRESS` - In Progress\n          * `COMPLETED` - Completed\n          * `CANCELLED` - Cancelled\n          * `NO_SHOW` - No Show\n          * `RESCHEDULED` - Rescheduled\n      tags:\n      - appointments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedAppointmentList'\n          description: ''\n    post:\n      operationId: appointments_appointments_create\n      description: Create appointment with hospital from user.\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppointmentCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/AppointmentCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AppointmentCreateRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppointmentCreate'\n          description: ''\n  /api/appointments/appointments/{id}/:\n    get:\n      operationId: appointments_appointments_retrieve\n      description: ViewSet for managing appointments.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this appointment.\n        required: true\n      tags:\n      - appointments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Appointment'\n          description: ''\n    put:\n      operationId: appointments_appointments_update\n      description: ViewSet for managing appointments.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this appointment.\n        required: true\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppointmentUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/AppointmentUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AppointmentUpdateRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppointmentUpdate'\n          description: ''\n    patch:\n      operationId: appointments_appointments_partial_update\n      description: ViewSet for managing appointments.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this appointment.\n        required: true\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedAppointmentUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedAppointmentUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedAppointmentUpdateRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AppointmentUpdate'\n          description: ''\n    delete:\n      operationId: appointments_appointments_destroy\n      description: ViewSet for managing appointments.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this appointment.\n        required: true\n      tags:\n      - appointments\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/appointments/appointments/{id}/cancel/:\n    post:\n      operationId: appointments_appointments_cancel_create\n      description: Cancel appointment.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this appointment.\n        required: true\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Appointment'\n          description: ''\n  /api/appointments/appointments/{id}/check_in/:\n    post:\n      operationId: appointments_appointments_check_in_create\n      description: Check in patient for appointment.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this appointment.\n        required: true\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Appointment'\n          description: ''\n  /api/appointments/appointments/{id}/complete/:\n    post:\n      operationId: appointments_appointments_complete_create\n      description: Complete appointment.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this appointment.\n        required: true\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Appointment'\n          description: ''\n  /api/appointments/appointments/{id}/start/:\n    post:\n      operationId: appointments_appointments_start_create\n      description: Start appointment.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this appointment.\n        required: true\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/AppointmentRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Appointment'\n          description: ''\n  /api/appointments/appointments/dashboard_stats/:\n    get:\n      operationId: appointments_appointments_dashboard_stats_retrieve\n      description: Get appointment statistics for dashboard.\n      tags:\n      - appointments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Appointment'\n          description: ''\n  /api/appointments/slots/:\n    get:\n      operationId: appointments_slots_list\n      description: ViewSet for managing doctor availability slots.\n      parameters:\n      - in: query\n        name: doctor\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: is_recurring\n        schema:\n          type: boolean\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: status\n        schema:\n          type: string\n          enum:\n          - AVAILABLE\n          - BLOCKED\n          - BOOKED\n          - BREAK\n          - UNAVAILABLE\n        description: |-\n          * `AVAILABLE` - Available\n          * `BOOKED` - Booked\n          * `BLOCKED` - Blocked\n          * `BREAK` - Break\n          * `UNAVAILABLE` - Unavailable\n      tags:\n      - appointments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDoctorAvailabilitySlotList'\n          description: ''\n    post:\n      operationId: appointments_slots_create\n      description: ViewSet for managing doctor availability slots.\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotCreateRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorAvailabilitySlotCreate'\n          description: ''\n  /api/appointments/slots/{id}/:\n    get:\n      operationId: appointments_slots_retrieve\n      description: ViewSet for managing doctor availability slots.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this doctor availability slot.\n        required: true\n      tags:\n      - appointments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorAvailabilitySlot'\n          description: ''\n    put:\n      operationId: appointments_slots_update\n      description: ViewSet for managing doctor availability slots.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this doctor availability slot.\n        required: true\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorAvailabilitySlot'\n          description: ''\n    patch:\n      operationId: appointments_slots_partial_update\n      description: ViewSet for managing doctor availability slots.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this doctor availability slot.\n        required: true\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDoctorAvailabilitySlotRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedDoctorAvailabilitySlotRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedDoctorAvailabilitySlotRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorAvailabilitySlot'\n          description: ''\n    delete:\n      operationId: appointments_slots_destroy\n      description: ViewSet for managing doctor availability slots.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this doctor availability slot.\n        required: true\n      tags:\n      - appointments\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/appointments/slots/{id}/block/:\n    post:\n      operationId: appointments_slots_block_create\n      description: Block a slot from being booked.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this doctor availability slot.\n        required: true\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorAvailabilitySlot'\n          description: ''\n  /api/appointments/slots/{id}/unblock/:\n    post:\n      operationId: appointments_slots_unblock_create\n      description: Unblock a slot to make it available.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this doctor availability slot.\n        required: true\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorAvailabilitySlot'\n          description: ''\n  /api/appointments/slots/available/:\n    get:\n      operationId: appointments_slots_available_retrieve\n      description: Get available slots for booking.\n      tags:\n      - appointments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorAvailabilitySlot'\n          description: ''\n  /api/appointments/slots/generate_weekly_slots/:\n    post:\n      operationId: appointments_slots_generate_weekly_slots_create\n      description: Generate weekly recurring slots for a doctor.\n      tags:\n      - appointments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DoctorAvailabilitySlotRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorAvailabilitySlot'\n          description: ''\n  /api/auth/change-password/:\n    put:\n      operationId: auth_change_password_update\n      description: Change user password (requires current password)\n      summary: Change password\n      tags:\n      - Users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ChangePasswordRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/ChangePasswordRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ChangePasswordRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          description: No response body\n    patch:\n      operationId: auth_change_password_partial_update\n      description: Change user password (requires current password)\n      summary: Change password\n      tags:\n      - Users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedChangePasswordRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedChangePasswordRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedChangePasswordRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          description: No response body\n  /api/auth/doctors/:\n    get:\n      operationId: auth_doctors_list\n      description: Get list of all doctors in the system\n      summary: List doctors\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - Users\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDoctorList'\n          description: ''\n  /api/auth/health/:\n    get:\n      operationId: auth_health_retrieve\n      description: Health check endpoint for load balancers and monitoring.\n      tags:\n      - auth\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          description: No response body\n  /api/auth/login/:\n    post:\n      operationId: auth_login_create\n      description: Authenticate user with email and password to receive JWT tokens\n      summary: User login\n      tags:\n      - Authentication\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/LoginRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/LoginRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/LoginRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                description: Login successful\n                type: object\n                properties:\n                  user:\n                    $ref: '#/components/schemas/User'\n                  tokens:\n                    type: object\n                    properties:\n                      access:\n                        type: string\n                      refresh:\n                        type: string\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                description: Invalid credentials\n          description: ''\n  /api/auth/logout/:\n    post:\n      operationId: auth_logout_create\n      description: Logout user and invalidate session\n      summary: User logout\n      tags:\n      - Authentication\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          description: No response body\n  /api/auth/patients/:\n    get:\n      operationId: auth_patients_list\n      description: Get list of all patients in the system\n      summary: List patients\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - Users\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPatientList'\n          description: ''\n  /api/auth/profile/:\n    get:\n      operationId: auth_profile_retrieve\n      description: Get and update user profile information\n      summary: User profile\n      tags:\n      - Users\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    put:\n      operationId: auth_profile_update\n      description: Get and update user profile information\n      summary: User profile\n      tags:\n      - Users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n    patch:\n      operationId: auth_profile_partial_update\n      description: Get and update user profile information\n      summary: User profile\n      tags:\n      - Users\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedUserRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedUserRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedUserRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n  /api/auth/register/:\n    get:\n      operationId: auth_register_retrieve\n      description: Register a new user with role assignment.\n      summary: Register new user\n      tags:\n      - Authentication\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                description: Validation error\n          description: ''\n    post:\n      operationId: auth_register_create\n      description: Register a new user with role assignment.\n      summary: Register new user\n      tags:\n      - Authentication\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/UserCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/UserCreateRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/User'\n          description: ''\n        '400':\n          content:\n            application/json:\n              schema:\n                description: Validation error\n          description: ''\n  /api/auth/stats/:\n    get:\n      operationId: auth_stats_retrieve\n      description: Get user statistics and counts\n      summary: User statistics\n      tags:\n      - Users\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          description: No response body\n  /api/auth/token/refresh/:\n    post:\n      operationId: auth_token_refresh_create\n      description: |-\n        Takes a refresh type JSON web token and returns an access type JSON web\n        token if the refresh token is valid.\n      tags:\n      - auth\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TokenRefreshRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TokenRefreshRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/TokenRefreshRequest'\n        required: true\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenRefresh'\n          description: ''\n  /api/email/emails/:\n    get:\n      operationId: email_emails_list\n      description: Retrieve a list of all email requests with optional filtering.\n      summary: List Email Requests\n      parameters:\n      - in: query\n        name: email\n        schema:\n          type: string\n        description: Filter by email address\n      - in: query\n        name: has_attachment\n        schema:\n          type: boolean\n        description: Filter by whether email has file attachment\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: status\n        schema:\n          type: string\n        description: Filter by status (PENDING, PROCESSING, SENT, FAILED, CANCELLED)\n      tags:\n      - email\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedEmailRequestListList'\n              examples:\n                PendingRequests:\n                  value:\n                    count: 123\n                    next: http://api.example.org/accounts/?page=4\n                    previous: http://api.example.org/accounts/?page=2\n                    results:\n                    - status: PENDING\n                  summary: Pending Requests\n                  description: Filter to show only pending email requests\n                WithAttachments:\n                  value:\n                    count: 123\n                    next: http://api.example.org/accounts/?page=4\n                    previous: http://api.example.org/accounts/?page=2\n                    results:\n                    - has_attachment: true\n                  summary: With Attachments\n                  description: Filter to show emails with file attachments\n          description: ''\n    post:\n      operationId: email_emails_create\n      description: Send a new email with optional file attachment. No authentication\n        required.\n      summary: Send Email\n      tags:\n      - email\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailRequestRequest'\n            examples:\n              BasicContactForm:\n                value:\n                  full_name: John Doe\n                  email: john.doe@example.com\n                  phone: +1-555-123-4567\n                  job_profession: Software Engineer\n                  subject: General Inquiry\n                  message: I would like to know more about your services.\n                summary: Basic Contact Form\n                description: Basic contact form submission without file attachment\n              WithFileAttachment:\n                value:\n                  full_name: Jane Smith\n                  email: jane.smith@example.com\n                  phone: +1-555-987-6543\n                  job_profession: Medical Professional\n                  subject: Document Review Request\n                  message: Please review the attached medical document.\n                  file_attached: medical_document.pdf\n                summary: With File Attachment\n                description: Contact form submission with file attachment\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/EmailRequestRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/EmailRequestRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailRequest'\n              examples:\n                BasicContactForm:\n                  value:\n                    full_name: John Doe\n                    email: john.doe@example.com\n                    phone: +1-555-123-4567\n                    job_profession: Software Engineer\n                    subject: General Inquiry\n                    message: I would like to know more about your services.\n                  summary: Basic Contact Form\n                  description: Basic contact form submission without file attachment\n                WithFileAttachment:\n                  value:\n                    full_name: Jane Smith\n                    email: jane.smith@example.com\n                    phone: +1-555-987-6543\n                    job_profession: Medical Professional\n                    subject: Document Review Request\n                    message: Please review the attached medical document.\n                    file_attached: medical_document.pdf\n                  summary: With File Attachment\n                  description: Contact form submission with file attachment\n          description: ''\n  /api/email/emails/{id}/:\n    get:\n      operationId: email_emails_retrieve\n      description: Retrieve detailed information about a specific email request.\n      summary: Get Email Request Details\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Email Request.\n        required: true\n      tags:\n      - email\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailRequestDetail'\n          description: ''\n    put:\n      operationId: email_emails_update\n      description: |-\n        ViewSet for managing email requests.\n\n        Provides endpoints for sending emails, tracking status, and managing email requests.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Email Request.\n        required: true\n      tags:\n      - email\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailRequestDetailRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/EmailRequestDetailRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/EmailRequestDetailRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailRequestDetail'\n          description: ''\n    patch:\n      operationId: email_emails_partial_update\n      description: |-\n        ViewSet for managing email requests.\n\n        Provides endpoints for sending emails, tracking status, and managing email requests.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Email Request.\n        required: true\n      tags:\n      - email\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedEmailRequestDetailRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedEmailRequestDetailRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedEmailRequestDetailRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EmailRequestDetail'\n          description: ''\n    delete:\n      operationId: email_emails_destroy\n      description: |-\n        ViewSet for managing email requests.\n\n        Provides endpoints for sending emails, tracking status, and managing email requests.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Email Request.\n        required: true\n      tags:\n      - email\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/email/emails/{id}/cancel/:\n    post:\n      operationId: email_emails_cancel_create\n      description: Cancel a pending or processing email request.\n      summary: Cancel Email Request\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Email Request.\n        required: true\n      tags:\n      - email\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailRequestDetailRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/EmailRequestDetailRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/EmailRequestDetailRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/email/emails/retry_failed/:\n    post:\n      operationId: email_emails_retry_failed_create\n      description: Retry sending all failed email requests that haven't exceeded max\n        retries.\n      summary: Retry Failed Emails\n      tags:\n      - email\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/EmailRequestDetailRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/EmailRequestDetailRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/EmailRequestDetailRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/email/emails/statistics/:\n    get:\n      operationId: email_emails_statistics_retrieve\n      description: Retrieve statistics about email requests including counts by status.\n      summary: Get Email Statistics\n      tags:\n      - email\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/medical-records/documents/:\n    get:\n      operationId: medical_records_documents_list\n      description: ViewSet for Medical Document management.\n      parameters:\n      - in: query\n        name: document_type\n        schema:\n          type: string\n          enum:\n          - CT\n          - IMAGE\n          - LAB_REPORT\n          - MRI\n          - OTHER\n          - PDF\n          - PRESCRIPTION\n          - XRAY\n        description: |-\n          * `PDF` - PDF Document\n          * `IMAGE` - Image\n          * `XRAY` - X-Ray\n          * `MRI` - MRI Scan\n          * `CT` - CT Scan\n          * `LAB_REPORT` - Lab Report\n          * `PRESCRIPTION` - Prescription\n          * `OTHER` - Other\n      - in: query\n        name: medical_record\n        schema:\n          type: string\n          format: uuid\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedMedicalDocumentList'\n          description: ''\n    post:\n      operationId: medical_records_documents_create\n      description: ViewSet for Medical Document management.\n      tags:\n      - medical-records\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/MedicalDocumentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/MedicalDocumentRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalDocument'\n          description: ''\n  /api/medical-records/documents/{id}/:\n    get:\n      operationId: medical_records_documents_retrieve\n      description: ViewSet for Medical Document management.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical document.\n        required: true\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalDocument'\n          description: ''\n    put:\n      operationId: medical_records_documents_update\n      description: ViewSet for Medical Document management.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical document.\n        required: true\n      tags:\n      - medical-records\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/MedicalDocumentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/MedicalDocumentRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalDocument'\n          description: ''\n    patch:\n      operationId: medical_records_documents_partial_update\n      description: ViewSet for Medical Document management.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical document.\n        required: true\n      tags:\n      - medical-records\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedMedicalDocumentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedMedicalDocumentRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalDocument'\n          description: ''\n    delete:\n      operationId: medical_records_documents_destroy\n      description: ViewSet for Medical Document management.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical document.\n        required: true\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/medical-records/documents/by_type/:\n    get:\n      operationId: medical_records_documents_by_type_retrieve\n      description: Get documents grouped by type.\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalDocument'\n          description: ''\n  /api/medical-records/documents/recent_uploads/:\n    get:\n      operationId: medical_records_documents_recent_uploads_retrieve\n      description: Get recently uploaded documents (last 7 days).\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalDocument'\n          description: ''\n  /api/medical-records/records/:\n    get:\n      operationId: medical_records_records_list\n      description: |-\n        ViewSet for Medical Record CRUD operations.\n\n        Provides endpoints for:\n        - List all medical records (with filtering)\n        - Create new medical record\n        - Retrieve medical record details\n        - Update medical record\n        - Delete medical record\n        - Custom actions for record management\n      parameters:\n      - in: query\n        name: created_by\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: is_confidential\n        schema:\n          type: boolean\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - in: query\n        name: patient\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: record_type\n        schema:\n          type: string\n          enum:\n          - ALLERGY\n          - DIAGNOSIS\n          - DISCHARGE\n          - GENERAL\n          - IMAGING\n          - LAB_RESULT\n          - PRESCRIPTION\n          - SURGERY\n          - VACCINATION\n        description: |-\n          * `GENERAL` - General Record\n          * `LAB_RESULT` - Lab Result\n          * `IMAGING` - Imaging/X-Ray\n          * `PRESCRIPTION` - Prescription\n          * `VACCINATION` - Vaccination Record\n          * `SURGERY` - Surgery Report\n          * `DISCHARGE` - Discharge Summary\n          * `ALLERGY` - Allergy Record\n          * `DIAGNOSIS` - Diagnosis\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedMedicalRecordListList'\n          description: ''\n    post:\n      operationId: medical_records_records_create\n      description: |-\n        ViewSet for Medical Record CRUD operations.\n\n        Provides endpoints for:\n        - List all medical records (with filtering)\n        - Create new medical record\n        - Retrieve medical record details\n        - Update medical record\n        - Delete medical record\n        - Custom actions for record management\n      tags:\n      - medical-records\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMedicalRecordRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateMedicalRecordRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CreateMedicalRecordRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateMedicalRecord'\n          description: ''\n  /api/medical-records/records/{id}/:\n    get:\n      operationId: medical_records_records_retrieve\n      description: |-\n        ViewSet for Medical Record CRUD operations.\n\n        Provides endpoints for:\n        - List all medical records (with filtering)\n        - Create new medical record\n        - Retrieve medical record details\n        - Update medical record\n        - Delete medical record\n        - Custom actions for record management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical record.\n        required: true\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalRecord'\n          description: ''\n    put:\n      operationId: medical_records_records_update\n      description: |-\n        ViewSet for Medical Record CRUD operations.\n\n        Provides endpoints for:\n        - List all medical records (with filtering)\n        - Create new medical record\n        - Retrieve medical record details\n        - Update medical record\n        - Delete medical record\n        - Custom actions for record management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical record.\n        required: true\n      tags:\n      - medical-records\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateMedicalRecordRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateMedicalRecordRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CreateMedicalRecordRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateMedicalRecord'\n          description: ''\n    patch:\n      operationId: medical_records_records_partial_update\n      description: |-\n        ViewSet for Medical Record CRUD operations.\n\n        Provides endpoints for:\n        - List all medical records (with filtering)\n        - Create new medical record\n        - Retrieve medical record details\n        - Update medical record\n        - Delete medical record\n        - Custom actions for record management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical record.\n        required: true\n      tags:\n      - medical-records\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedCreateMedicalRecordRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedCreateMedicalRecordRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedCreateMedicalRecordRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateMedicalRecord'\n          description: ''\n    delete:\n      operationId: medical_records_records_destroy\n      description: |-\n        ViewSet for Medical Record CRUD operations.\n\n        Provides endpoints for:\n        - List all medical records (with filtering)\n        - Create new medical record\n        - Retrieve medical record details\n        - Update medical record\n        - Delete medical record\n        - Custom actions for record management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical record.\n        required: true\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/medical-records/records/{id}/documents/:\n    get:\n      operationId: medical_records_records_documents_retrieve\n      description: Manage documents for a medical record.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical record.\n        required: true\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalRecord'\n          description: ''\n    post:\n      operationId: medical_records_records_documents_create\n      description: Manage documents for a medical record.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical record.\n        required: true\n      tags:\n      - medical-records\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MedicalRecordRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/MedicalRecordRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/MedicalRecordRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalRecord'\n          description: ''\n  /api/medical-records/records/{id}/mark_confidential/:\n    post:\n      operationId: medical_records_records_mark_confidential_create\n      description: Mark a medical record as confidential.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical record.\n        required: true\n      tags:\n      - medical-records\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MedicalRecordRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/MedicalRecordRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/MedicalRecordRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalRecord'\n          description: ''\n  /api/medical-records/records/{id}/restrict_access/:\n    post:\n      operationId: medical_records_records_restrict_access_create\n      description: Restrict access to a medical record.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this medical record.\n        required: true\n      tags:\n      - medical-records\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/MedicalRecordRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/MedicalRecordRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/MedicalRecordRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalRecord'\n          description: ''\n  /api/medical-records/records/allergies/:\n    get:\n      operationId: medical_records_records_allergies_retrieve\n      description: Get all allergy records.\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalRecord'\n          description: ''\n  /api/medical-records/records/by_patient/:\n    get:\n      operationId: medical_records_records_by_patient_retrieve\n      description: Get medical records for a specific patient.\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalRecord'\n          description: ''\n  /api/medical-records/records/lab_results/:\n    get:\n      operationId: medical_records_records_lab_results_retrieve\n      description: Get all lab result records.\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalRecord'\n          description: ''\n  /api/medical-records/records/patient_history/:\n    get:\n      operationId: medical_records_records_patient_history_retrieve\n      description: Get comprehensive patient medical history.\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalRecord'\n          description: ''\n  /api/medical-records/records/recent/:\n    get:\n      operationId: medical_records_records_recent_retrieve\n      description: Get recent medical records (last 30 days).\n      tags:\n      - medical-records\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/MedicalRecord'\n          description: ''\n  /api/specialty/doctor-specialties/:\n    get:\n      operationId: specialty_doctor_specialties_list\n      description: |-\n        ViewSet for managing doctor-specialty relationships\n        Includes lazy loading and pagination\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedDoctorSpecialtyList'\n          description: ''\n    post:\n      operationId: specialty_doctor_specialties_create\n      description: Create doctor specialty with default if not specified\n      tags:\n      - specialty\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DoctorSpecialtyCreateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DoctorSpecialtyCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DoctorSpecialtyCreateRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorSpecialtyCreate'\n          description: ''\n  /api/specialty/doctor-specialties/{id}/:\n    get:\n      operationId: specialty_doctor_specialties_retrieve\n      description: |-\n        ViewSet for managing doctor-specialty relationships\n        Includes lazy loading and pagination\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Doctor Specialty.\n        required: true\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorSpecialty'\n          description: ''\n    put:\n      operationId: specialty_doctor_specialties_update\n      description: |-\n        ViewSet for managing doctor-specialty relationships\n        Includes lazy loading and pagination\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Doctor Specialty.\n        required: true\n      tags:\n      - specialty\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DoctorSpecialtyRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DoctorSpecialtyRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DoctorSpecialtyRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorSpecialty'\n          description: ''\n    patch:\n      operationId: specialty_doctor_specialties_partial_update\n      description: |-\n        ViewSet for managing doctor-specialty relationships\n        Includes lazy loading and pagination\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Doctor Specialty.\n        required: true\n      tags:\n      - specialty\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDoctorSpecialtyRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedDoctorSpecialtyRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedDoctorSpecialtyRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorSpecialty'\n          description: ''\n    delete:\n      operationId: specialty_doctor_specialties_destroy\n      description: |-\n        ViewSet for managing doctor-specialty relationships\n        Includes lazy loading and pagination\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Doctor Specialty.\n        required: true\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/specialty/doctor-specialties/{id}/set_primary/:\n    patch:\n      operationId: specialty_doctor_specialties_set_primary_partial_update\n      description: Set a doctor specialty as primary\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Doctor Specialty.\n        required: true\n      tags:\n      - specialty\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedDoctorSpecialtyRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedDoctorSpecialtyRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedDoctorSpecialtyRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorSpecialty'\n          description: ''\n  /api/specialty/doctor-specialties/bulk_assign/:\n    post:\n      operationId: specialty_doctor_specialties_bulk_assign_create\n      description: Bulk assign specialty to multiple doctors\n      tags:\n      - specialty\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DoctorSpecialtyRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/DoctorSpecialtyRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/DoctorSpecialtyRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorSpecialty'\n          description: ''\n  /api/specialty/doctor-specialties/by_doctor/:\n    get:\n      operationId: specialty_doctor_specialties_by_doctor_retrieve\n      description: Get specialties for a specific doctor (lazy loaded)\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DoctorSpecialty'\n          description: ''\n  /api/specialty/specialties/:\n    get:\n      operationId: specialty_specialties_list\n      description: |-\n        ViewSet for managing medical specialties\n        Supports lazy loading with pagination and filtering\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSpecialtyListList'\n          description: ''\n    post:\n      operationId: specialty_specialties_create\n      description: |-\n        ViewSet for managing medical specialties\n        Supports lazy loading with pagination and filtering\n      tags:\n      - specialty\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Specialty'\n          description: ''\n  /api/specialty/specialties/{id}/:\n    get:\n      operationId: specialty_specialties_retrieve\n      description: |-\n        ViewSet for managing medical specialties\n        Supports lazy loading with pagination and filtering\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Specialty.\n        required: true\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Specialty'\n          description: ''\n    put:\n      operationId: specialty_specialties_update\n      description: |-\n        ViewSet for managing medical specialties\n        Supports lazy loading with pagination and filtering\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Specialty.\n        required: true\n      tags:\n      - specialty\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Specialty'\n          description: ''\n    patch:\n      operationId: specialty_specialties_partial_update\n      description: |-\n        ViewSet for managing medical specialties\n        Supports lazy loading with pagination and filtering\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Specialty.\n        required: true\n      tags:\n      - specialty\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedSpecialtyRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedSpecialtyRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedSpecialtyRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Specialty'\n          description: ''\n    delete:\n      operationId: specialty_specialties_destroy\n      description: |-\n        ViewSet for managing medical specialties\n        Supports lazy loading with pagination and filtering\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Specialty.\n        required: true\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/specialty/specialties/{id}/doctors/:\n    get:\n      operationId: specialty_specialties_doctors_retrieve\n      description: Get all doctors with this specialty (paginated)\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Specialty.\n        required: true\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Specialty'\n          description: ''\n  /api/specialty/specialties/{id}/update_statistics/:\n    post:\n      operationId: specialty_specialties_update_statistics_create\n      description: Update statistics for a specialty\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Specialty.\n        required: true\n      tags:\n      - specialty\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Specialty'\n          description: ''\n  /api/specialty/specialties/bulk_create/:\n    post:\n      operationId: specialty_specialties_bulk_create_create\n      description: Bulk create specialties\n      tags:\n      - specialty\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SpecialtyRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Specialty'\n          description: ''\n  /api/specialty/specialties/popular/:\n    get:\n      operationId: specialty_specialties_popular_retrieve\n      description: Get most popular specialties based on doctor count\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Specialty'\n          description: ''\n  /api/specialty/specialties/search/:\n    get:\n      operationId: specialty_specialties_search_retrieve\n      description: Advanced search for specialties with chunked results\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Specialty'\n          description: ''\n  /api/specialty/statistics/:\n    get:\n      operationId: specialty_statistics_list\n      description: |-\n        ViewSet for viewing specialty statistics\n        Read-only with pagination for performance\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: page_size\n        required: false\n        in: query\n        description: Number of results to return per page.\n        schema:\n          type: integer\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSpecialtyStatisticsList'\n          description: ''\n  /api/specialty/statistics/{id}/:\n    get:\n      operationId: specialty_statistics_retrieve\n      description: |-\n        ViewSet for viewing specialty statistics\n        Read-only with pagination for performance\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: integer\n        description: A unique integer value identifying this Specialty Statistics.\n        required: true\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SpecialtyStatistics'\n          description: ''\n  /api/specialty/statistics/high_demand/:\n    get:\n      operationId: specialty_statistics_high_demand_retrieve\n      description: Get specialties with high demand (low wait times, high requests)\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SpecialtyStatistics'\n          description: ''\n  /api/specialty/statistics/top_rated/:\n    get:\n      operationId: specialty_statistics_top_rated_retrieve\n      description: Get top-rated specialties\n      tags:\n      - specialty\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SpecialtyStatistics'\n          description: ''\n  /api/subscription-plans/plans/:\n    get:\n      operationId: subscription_plans_plans_list\n      description: |-\n        ViewSet for Subscription Plan CRUD operations.\n\n        Provides endpoints for:\n        - List all subscription plans\n        - Create new plan (admin only)\n        - Retrieve plan details\n        - Update plan (admin only)\n        - Delete plan (admin only)\n        - Custom actions for plan management\n      parameters:\n      - in: query\n        name: billing_cycle\n        schema:\n          type: string\n          enum:\n          - ANNUAL\n          - MONTHLY\n          - ONE_TIME\n          - QUARTERLY\n          - SEMI_ANNUAL\n        description: |-\n          * `MONTHLY` - Monthly\n          * `QUARTERLY` - Quarterly\n          * `SEMI_ANNUAL` - Semi-Annual\n          * `ANNUAL` - Annual\n          * `ONE_TIME` - One-Time\n      - in: query\n        name: is_active\n        schema:\n          type: boolean\n      - in: query\n        name: is_featured\n        schema:\n          type: boolean\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - in: query\n        name: plan_type\n        schema:\n          type: string\n          enum:\n          - BASIC\n          - CUSTOM\n          - ENTERPRISE\n          - FREE\n          - PROFESSIONAL\n        description: |-\n          * `FREE` - Free\n          * `BASIC` - Basic\n          * `PROFESSIONAL` - Professional\n          * `ENTERPRISE` - Enterprise\n          * `CUSTOM` - Custom\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSubscriptionPlanListList'\n          description: ''\n    post:\n      operationId: subscription_plans_plans_create\n      description: |-\n        ViewSet for Subscription Plan CRUD operations.\n\n        Provides endpoints for:\n        - List all subscription plans\n        - Create new plan (admin only)\n        - Retrieve plan details\n        - Update plan (admin only)\n        - Delete plan (admin only)\n        - Custom actions for plan management\n      tags:\n      - subscription-plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionPlanRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionPlanRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionPlanRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionPlan'\n          description: ''\n  /api/subscription-plans/plans/{id}/:\n    get:\n      operationId: subscription_plans_plans_retrieve\n      description: |-\n        ViewSet for Subscription Plan CRUD operations.\n\n        Provides endpoints for:\n        - List all subscription plans\n        - Create new plan (admin only)\n        - Retrieve plan details\n        - Update plan (admin only)\n        - Delete plan (admin only)\n        - Custom actions for plan management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription plan.\n        required: true\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionPlan'\n          description: ''\n    put:\n      operationId: subscription_plans_plans_update\n      description: |-\n        ViewSet for Subscription Plan CRUD operations.\n\n        Provides endpoints for:\n        - List all subscription plans\n        - Create new plan (admin only)\n        - Retrieve plan details\n        - Update plan (admin only)\n        - Delete plan (admin only)\n        - Custom actions for plan management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription plan.\n        required: true\n      tags:\n      - subscription-plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionPlanRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionPlanRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionPlanRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionPlan'\n          description: ''\n    patch:\n      operationId: subscription_plans_plans_partial_update\n      description: |-\n        ViewSet for Subscription Plan CRUD operations.\n\n        Provides endpoints for:\n        - List all subscription plans\n        - Create new plan (admin only)\n        - Retrieve plan details\n        - Update plan (admin only)\n        - Delete plan (admin only)\n        - Custom actions for plan management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription plan.\n        required: true\n      tags:\n      - subscription-plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedSubscriptionPlanRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedSubscriptionPlanRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedSubscriptionPlanRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionPlan'\n          description: ''\n    delete:\n      operationId: subscription_plans_plans_destroy\n      description: |-\n        ViewSet for Subscription Plan CRUD operations.\n\n        Provides endpoints for:\n        - List all subscription plans\n        - Create new plan (admin only)\n        - Retrieve plan details\n        - Update plan (admin only)\n        - Delete plan (admin only)\n        - Custom actions for plan management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription plan.\n        required: true\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/subscription-plans/plans/available/:\n    get:\n      operationId: subscription_plans_plans_available_retrieve\n      description: Get all available plans for public display.\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionPlan'\n          description: ''\n  /api/subscription-plans/plans/compare/:\n    post:\n      operationId: subscription_plans_plans_compare_create\n      description: Compare multiple plans.\n      tags:\n      - subscription-plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionPlanRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionPlanRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionPlanRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionPlan'\n          description: ''\n  /api/subscription-plans/plans/featured/:\n    get:\n      operationId: subscription_plans_plans_featured_retrieve\n      description: Get featured plans.\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SubscriptionPlan'\n          description: ''\n  /api/subscription-plans/subscriptions/:\n    get:\n      operationId: subscription_plans_subscriptions_list\n      description: |-\n        ViewSet for Subscription management.\n\n        Provides endpoints for:\n        - List all subscriptions (admin)\n        - Create new subscription\n        - Retrieve subscription details\n        - Update subscription\n        - Cancel subscription\n        - Custom actions for subscription management\n      parameters:\n      - in: query\n        name: auto_renew\n        schema:\n          type: boolean\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - in: query\n        name: plan\n        schema:\n          type: string\n          format: uuid\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: status\n        schema:\n          type: string\n          enum:\n          - ACTIVE\n          - CANCELLED\n          - EXPIRED\n          - PAST_DUE\n          - SUSPENDED\n          - TRIAL\n        description: |-\n          * `TRIAL` - Trial\n          * `ACTIVE` - Active\n          * `PAST_DUE` - Past Due\n          * `CANCELLED` - Cancelled\n          * `EXPIRED` - Expired\n          * `SUSPENDED` - Suspended\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedSubscriptionList'\n          description: ''\n    post:\n      operationId: subscription_plans_subscriptions_create\n      description: |-\n        ViewSet for Subscription management.\n\n        Provides endpoints for:\n        - List all subscriptions (admin)\n        - Create new subscription\n        - Retrieve subscription details\n        - Update subscription\n        - Cancel subscription\n        - Custom actions for subscription management\n      tags:\n      - subscription-plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSubscriptionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateSubscriptionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CreateSubscriptionRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSubscription'\n          description: ''\n  /api/subscription-plans/subscriptions/{id}/:\n    get:\n      operationId: subscription_plans_subscriptions_retrieve\n      description: |-\n        ViewSet for Subscription management.\n\n        Provides endpoints for:\n        - List all subscriptions (admin)\n        - Create new subscription\n        - Retrieve subscription details\n        - Update subscription\n        - Cancel subscription\n        - Custom actions for subscription management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription.\n        required: true\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: ''\n    put:\n      operationId: subscription_plans_subscriptions_update\n      description: |-\n        ViewSet for Subscription management.\n\n        Provides endpoints for:\n        - List all subscriptions (admin)\n        - Create new subscription\n        - Retrieve subscription details\n        - Update subscription\n        - Cancel subscription\n        - Custom actions for subscription management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription.\n        required: true\n      tags:\n      - subscription-plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateSubscriptionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateSubscriptionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CreateSubscriptionRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSubscription'\n          description: ''\n    patch:\n      operationId: subscription_plans_subscriptions_partial_update\n      description: |-\n        ViewSet for Subscription management.\n\n        Provides endpoints for:\n        - List all subscriptions (admin)\n        - Create new subscription\n        - Retrieve subscription details\n        - Update subscription\n        - Cancel subscription\n        - Custom actions for subscription management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription.\n        required: true\n      tags:\n      - subscription-plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedCreateSubscriptionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedCreateSubscriptionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedCreateSubscriptionRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateSubscription'\n          description: ''\n    delete:\n      operationId: subscription_plans_subscriptions_destroy\n      description: |-\n        ViewSet for Subscription management.\n\n        Provides endpoints for:\n        - List all subscriptions (admin)\n        - Create new subscription\n        - Retrieve subscription details\n        - Update subscription\n        - Cancel subscription\n        - Custom actions for subscription management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription.\n        required: true\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/subscription-plans/subscriptions/{id}/cancel/:\n    post:\n      operationId: subscription_plans_subscriptions_cancel_create\n      description: Cancel a subscription.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription.\n        required: true\n      tags:\n      - subscription-plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: ''\n  /api/subscription-plans/subscriptions/{id}/renew/:\n    post:\n      operationId: subscription_plans_subscriptions_renew_create\n      description: Manually renew a subscription.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription.\n        required: true\n      tags:\n      - subscription-plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: ''\n  /api/subscription-plans/subscriptions/{id}/upgrade/:\n    post:\n      operationId: subscription_plans_subscriptions_upgrade_create\n      description: Upgrade subscription to a different plan.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription.\n        required: true\n      tags:\n      - subscription-plans\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/SubscriptionRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: ''\n  /api/subscription-plans/subscriptions/{id}/usage/:\n    get:\n      operationId: subscription_plans_subscriptions_usage_retrieve\n      description: Get subscription usage statistics.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this subscription.\n        required: true\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: ''\n  /api/subscription-plans/subscriptions/current/:\n    get:\n      operationId: subscription_plans_subscriptions_current_retrieve\n      description: Get current user's hospital subscription.\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: ''\n  /api/subscription-plans/subscriptions/expiring_soon/:\n    get:\n      operationId: subscription_plans_subscriptions_expiring_soon_retrieve\n      description: Get subscriptions expiring in the next 30 days.\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: ''\n  /api/subscription-plans/subscriptions/statistics/:\n    get:\n      operationId: subscription_plans_subscriptions_statistics_retrieve\n      description: Get subscription statistics (admin only).\n      tags:\n      - subscription-plans\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Subscription'\n          description: ''\n  /api/tenants/hospitals/:\n    get:\n      operationId: tenants_hospitals_list\n      description: Retrieve a list of all hospitals with optional filtering and search\n        capabilities.\n      summary: List Hospitals\n      parameters:\n      - in: query\n        name: city\n        schema:\n          type: string\n        description: Filter by city\n      - in: query\n        name: country\n        schema:\n          type: string\n      - in: query\n        name: emergency_services\n        schema:\n          type: boolean\n        description: Filter by emergency services availability\n      - in: query\n        name: hospital_type\n        schema:\n          type: string\n        description: Filter by hospital type (e.g., GENERAL, SPECIALTY, CLINIC)\n      - in: query\n        name: is_active\n        schema:\n          type: boolean\n        description: Filter by active status\n      - in: query\n        name: is_verified\n        schema:\n          type: boolean\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - in: query\n        name: search\n        schema:\n          type: string\n        description: Search hospitals by name, city, or state\n      - in: query\n        name: state\n        schema:\n          type: string\n        description: Filter by state\n      tags:\n      - tenants\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedHospitalListList'\n              examples:\n                GeneralHospitals:\n                  value:\n                    count: 123\n                    next: http://api.example.org/accounts/?page=4\n                    previous: http://api.example.org/accounts/?page=2\n                    results:\n                    - hospital_type: GENERAL\n                  summary: General Hospitals\n                  description: Filter to show only general hospitals\n                EmergencyCapable:\n                  value:\n                    count: 123\n                    next: http://api.example.org/accounts/?page=4\n                    previous: http://api.example.org/accounts/?page=2\n                    results:\n                    - emergency_services: true\n                  summary: Emergency Capable\n                  description: Filter to show hospitals with emergency services\n          description: ''\n    post:\n      operationId: tenants_hospitals_create\n      description: Create a new hospital with all required information. No authentication\n        required.\n      summary: Create Hospital\n      tags:\n      - tenants\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HospitalCreateRequest'\n            examples:\n              GeneralHospital:\n                value:\n                  name: City General Hospital\n                  hospital_type: GENERAL\n                  description: A comprehensive general hospital serving the community\n                  phone_number: +1-555-123-4567\n                  email: info@citygeneral.com\n                  website: https://citygeneral.com\n                  address_line1: 123 Medical Center Blvd\n                  city: Springfield\n                  state: IL\n                  country: United States\n                  postal_code: '62701'\n                  bed_count: 250\n                  emergency_services: true\n                  services:\n                  - Cardiology\n                  - Pediatrics\n                  - Emergency Medicine\n                  - Surgery\n                summary: General Hospital\n                description: Example of creating a general hospital\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/HospitalCreateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/HospitalCreateRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HospitalCreate'\n              examples:\n                GeneralHospital:\n                  value:\n                    name: City General Hospital\n                    hospital_type: GENERAL\n                    description: A comprehensive general hospital serving the community\n                    phone_number: +1-555-123-4567\n                    email: info@citygeneral.com\n                    website: https://citygeneral.com\n                    address_line1: 123 Medical Center Blvd\n                    city: Springfield\n                    state: IL\n                    country: United States\n                    postal_code: '62701'\n                    bed_count: 250\n                    emergency_services: true\n                    services:\n                    - Cardiology\n                    - Pediatrics\n                    - Emergency Medicine\n                    - Surgery\n                  summary: General Hospital\n                  description: Example of creating a general hospital\n          description: ''\n  /api/tenants/hospitals/{id}/:\n    get:\n      operationId: tenants_hospitals_retrieve\n      description: Retrieve detailed information about a specific hospital. No authentication\n        required.\n      summary: Get Hospital Details\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Hospital.\n        required: true\n      tags:\n      - tenants\n      security:\n      - jwtAuth: []\n      - {}\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Hospital'\n          description: ''\n    put:\n      operationId: tenants_hospitals_update\n      description: Update all fields of an existing hospital. Authentication required.\n      summary: Update Hospital\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Hospital.\n        required: true\n      tags:\n      - tenants\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/HospitalUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/HospitalUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/HospitalUpdateRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HospitalUpdate'\n          description: ''\n    patch:\n      operationId: tenants_hospitals_partial_update\n      description: Update specific fields of an existing hospital. Authentication\n        required.\n      summary: Partial Update Hospital\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Hospital.\n        required: true\n      tags:\n      - tenants\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedHospitalUpdateRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedHospitalUpdateRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedHospitalUpdateRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/HospitalUpdate'\n          description: ''\n    delete:\n      operationId: tenants_hospitals_destroy\n      description: Delete a hospital (soft delete by setting is_active=False). Authentication\n        required.\n      summary: Delete Hospital\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this Hospital.\n        required: true\n      tags:\n      - tenants\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/tenants/hospitals/emergency/:\n    get:\n      operationId: tenants_hospitals_emergency_list\n      description: Retrieve all hospitals that provide emergency services. No authentication\n        required.\n      summary: Get Emergency Hospitals\n      parameters:\n      - in: query\n        name: city\n        schema:\n          type: string\n      - in: query\n        name: country\n        schema:\n          type: string\n      - in: query\n        name: emergency_services\n        schema:\n          type: boolean\n      - in: query\n        name: hospital_type\n        schema:\n          type: string\n          enum:\n          - CANCER\n          - CHILDREN\n          - CLINIC\n          - GENERAL\n          - MEDICAL_CENTER\n          - PSYCHIATRIC\n          - REHABILITATION\n          - SPECIALTY\n          - URGENT_CARE\n          - WOMEN\n        description: |-\n          * `GENERAL` - General Hospital\n          * `SPECIALTY` - Specialty Hospital\n          * `CLINIC` - Clinic\n          * `MEDICAL_CENTER` - Medical Center\n          * `URGENT_CARE` - Urgent Care\n          * `REHABILITATION` - Rehabilitation Center\n          * `PSYCHIATRIC` - Psychiatric Hospital\n          * `CHILDREN` - Children's Hospital\n          * `WOMEN` - Women's Hospital\n          * `CANCER` - Cancer Center\n      - in: query\n        name: is_active\n        schema:\n          type: boolean\n      - in: query\n        name: is_verified\n        schema:\n          type: boolean\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: state\n        schema:\n          type: string\n      tags:\n      - tenants\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedHospitalListList'\n          description: ''\n  /api/tenants/hospitals/nearby/:\n    get:\n      operationId: tenants_hospitals_nearby_list\n      description: Search for hospitals near a specific location using coordinates.\n        No authentication required.\n      summary: Search Hospitals by Location\n      parameters:\n      - in: query\n        name: city\n        schema:\n          type: string\n      - in: query\n        name: country\n        schema:\n          type: string\n      - in: query\n        name: emergency_services\n        schema:\n          type: boolean\n      - in: query\n        name: hospital_type\n        schema:\n          type: string\n          enum:\n          - CANCER\n          - CHILDREN\n          - CLINIC\n          - GENERAL\n          - MEDICAL_CENTER\n          - PSYCHIATRIC\n          - REHABILITATION\n          - SPECIALTY\n          - URGENT_CARE\n          - WOMEN\n        description: |-\n          * `GENERAL` - General Hospital\n          * `SPECIALTY` - Specialty Hospital\n          * `CLINIC` - Clinic\n          * `MEDICAL_CENTER` - Medical Center\n          * `URGENT_CARE` - Urgent Care\n          * `REHABILITATION` - Rehabilitation Center\n          * `PSYCHIATRIC` - Psychiatric Hospital\n          * `CHILDREN` - Children's Hospital\n          * `WOMEN` - Women's Hospital\n          * `CANCER` - Cancer Center\n      - in: query\n        name: is_active\n        schema:\n          type: boolean\n      - in: query\n        name: is_verified\n        schema:\n          type: boolean\n      - in: query\n        name: lat\n        schema:\n          type: number\n          format: double\n        description: Latitude coordinate\n        required: true\n      - in: query\n        name: lng\n        schema:\n          type: number\n          format: double\n        description: Longitude coordinate\n        required: true\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - in: query\n        name: radius\n        schema:\n          type: number\n          format: double\n          default: 50.0\n        description: 'Search radius in kilometers (default: 50)'\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: state\n        schema:\n          type: string\n      tags:\n      - tenants\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedHospitalListList'\n          description: ''\n  /api/tenants/hospitals/statistics/:\n    get:\n      operationId: tenants_hospitals_statistics_retrieve\n      description: Retrieve statistics about hospitals including counts by type and\n        location. No authentication required.\n      summary: Get Hospital Statistics\n      tags:\n      - tenants\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                type: object\n                additionalProperties: {}\n          description: ''\n  /api/treatments/prescriptions/:\n    get:\n      operationId: treatments_prescriptions_list\n      description: ViewSet for Prescription management.\n      parameters:\n      - in: query\n        name: is_active\n        schema:\n          type: boolean\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: start_date\n        schema:\n          type: string\n          format: date\n      - in: query\n        name: treatment\n        schema:\n          type: string\n          format: uuid\n      tags:\n      - treatments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedPrescriptionList'\n          description: ''\n    post:\n      operationId: treatments_prescriptions_create\n      description: ViewSet for Prescription management.\n      tags:\n      - treatments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrescriptionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PrescriptionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PrescriptionRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prescription'\n          description: ''\n  /api/treatments/prescriptions/{id}/:\n    get:\n      operationId: treatments_prescriptions_retrieve\n      description: ViewSet for Prescription management.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this prescription.\n        required: true\n      tags:\n      - treatments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prescription'\n          description: ''\n    put:\n      operationId: treatments_prescriptions_update\n      description: ViewSet for Prescription management.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this prescription.\n        required: true\n      tags:\n      - treatments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrescriptionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PrescriptionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PrescriptionRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prescription'\n          description: ''\n    patch:\n      operationId: treatments_prescriptions_partial_update\n      description: ViewSet for Prescription management.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this prescription.\n        required: true\n      tags:\n      - treatments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedPrescriptionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedPrescriptionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedPrescriptionRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prescription'\n          description: ''\n    delete:\n      operationId: treatments_prescriptions_destroy\n      description: ViewSet for Prescription management.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this prescription.\n        required: true\n      tags:\n      - treatments\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/treatments/prescriptions/{id}/deactivate/:\n    post:\n      operationId: treatments_prescriptions_deactivate_create\n      description: Deactivate a prescription.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this prescription.\n        required: true\n      tags:\n      - treatments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PrescriptionRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PrescriptionRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PrescriptionRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prescription'\n          description: ''\n  /api/treatments/prescriptions/active/:\n    get:\n      operationId: treatments_prescriptions_active_retrieve\n      description: Get all active prescriptions.\n      tags:\n      - treatments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Prescription'\n          description: ''\n  /api/treatments/treatments/:\n    get:\n      operationId: treatments_treatments_list\n      description: |-\n        ViewSet for Treatment CRUD operations.\n\n        Provides endpoints for:\n        - List all treatments (with filtering)\n        - Create new treatment\n        - Retrieve treatment details\n        - Update treatment\n        - Delete treatment\n        - Custom actions for treatment management\n      parameters:\n      - name: ordering\n        required: false\n        in: query\n        description: Which field to use when ordering the results.\n        schema:\n          type: string\n      - name: page\n        required: false\n        in: query\n        description: A page number within the paginated result set.\n        schema:\n          type: integer\n      - in: query\n        name: patient\n        schema:\n          type: string\n          format: uuid\n      - in: query\n        name: prescribed_by\n        schema:\n          type: string\n          format: uuid\n      - name: search\n        required: false\n        in: query\n        description: A search term.\n        schema:\n          type: string\n      - in: query\n        name: start_date\n        schema:\n          type: string\n          format: date\n      - in: query\n        name: status\n        schema:\n          type: string\n          enum:\n          - CANCELLED\n          - COMPLETED\n          - IN_PROGRESS\n          - ON_HOLD\n          - PLANNED\n        description: |-\n          * `PLANNED` - Planned\n          * `IN_PROGRESS` - In Progress\n          * `COMPLETED` - Completed\n          * `CANCELLED` - Cancelled\n          * `ON_HOLD` - On Hold\n      - in: query\n        name: treatment_type\n        schema:\n          type: string\n          enum:\n          - COUNSELING\n          - DIET_PLAN\n          - EXERCISE\n          - MEDICATION\n          - PROCEDURE\n          - REHABILITATION\n          - SURGERY\n          - THERAPY\n        description: |-\n          * `MEDICATION` - Medication\n          * `THERAPY` - Therapy\n          * `SURGERY` - Surgery\n          * `PROCEDURE` - Procedure\n          * `REHABILITATION` - Rehabilitation\n          * `COUNSELING` - Counseling\n          * `DIET_PLAN` - Diet Plan\n          * `EXERCISE` - Exercise Program\n      tags:\n      - treatments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PaginatedTreatmentListList'\n          description: ''\n    post:\n      operationId: treatments_treatments_create\n      description: |-\n        ViewSet for Treatment CRUD operations.\n\n        Provides endpoints for:\n        - List all treatments (with filtering)\n        - Create new treatment\n        - Retrieve treatment details\n        - Update treatment\n        - Delete treatment\n        - Custom actions for treatment management\n      tags:\n      - treatments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTreatmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateTreatmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CreateTreatmentRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '201':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTreatment'\n          description: ''\n  /api/treatments/treatments/{id}/:\n    get:\n      operationId: treatments_treatments_retrieve\n      description: |-\n        ViewSet for Treatment CRUD operations.\n\n        Provides endpoints for:\n        - List all treatments (with filtering)\n        - Create new treatment\n        - Retrieve treatment details\n        - Update treatment\n        - Delete treatment\n        - Custom actions for treatment management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this treatment.\n        required: true\n      tags:\n      - treatments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Treatment'\n          description: ''\n    put:\n      operationId: treatments_treatments_update\n      description: |-\n        ViewSet for Treatment CRUD operations.\n\n        Provides endpoints for:\n        - List all treatments (with filtering)\n        - Create new treatment\n        - Retrieve treatment details\n        - Update treatment\n        - Delete treatment\n        - Custom actions for treatment management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this treatment.\n        required: true\n      tags:\n      - treatments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateTreatmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/CreateTreatmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/CreateTreatmentRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTreatment'\n          description: ''\n    patch:\n      operationId: treatments_treatments_partial_update\n      description: |-\n        ViewSet for Treatment CRUD operations.\n\n        Provides endpoints for:\n        - List all treatments (with filtering)\n        - Create new treatment\n        - Retrieve treatment details\n        - Update treatment\n        - Delete treatment\n        - Custom actions for treatment management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this treatment.\n        required: true\n      tags:\n      - treatments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PatchedCreateTreatmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/PatchedCreateTreatmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/PatchedCreateTreatmentRequest'\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateTreatment'\n          description: ''\n    delete:\n      operationId: treatments_treatments_destroy\n      description: |-\n        ViewSet for Treatment CRUD operations.\n\n        Provides endpoints for:\n        - List all treatments (with filtering)\n        - Create new treatment\n        - Retrieve treatment details\n        - Update treatment\n        - Delete treatment\n        - Custom actions for treatment management\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this treatment.\n        required: true\n      tags:\n      - treatments\n      security:\n      - jwtAuth: []\n      responses:\n        '204':\n          description: No response body\n  /api/treatments/treatments/{id}/cancel/:\n    post:\n      operationId: treatments_treatments_cancel_create\n      description: Cancel a treatment.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this treatment.\n        required: true\n      tags:\n      - treatments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TreatmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TreatmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/TreatmentRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Treatment'\n          description: ''\n  /api/treatments/treatments/{id}/complete/:\n    post:\n      operationId: treatments_treatments_complete_create\n      description: Mark a treatment as completed.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this treatment.\n        required: true\n      tags:\n      - treatments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TreatmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TreatmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/TreatmentRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Treatment'\n          description: ''\n  /api/treatments/treatments/{id}/prescriptions/:\n    get:\n      operationId: treatments_treatments_prescriptions_retrieve\n      description: Manage prescriptions for a treatment.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this treatment.\n        required: true\n      tags:\n      - treatments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Treatment'\n          description: ''\n    post:\n      operationId: treatments_treatments_prescriptions_create\n      description: Manage prescriptions for a treatment.\n      parameters:\n      - in: path\n        name: id\n        schema:\n          type: string\n          format: uuid\n        description: A UUID string identifying this treatment.\n        required: true\n      tags:\n      - treatments\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/TreatmentRequest'\n          application/x-www-form-urlencoded:\n            schema:\n              $ref: '#/components/schemas/TreatmentRequest'\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/TreatmentRequest'\n        required: true\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Treatment'\n          description: ''\n  /api/treatments/treatments/active/:\n    get:\n      operationId: treatments_treatments_active_retrieve\n      description: Get all active treatments.\n      tags:\n      - treatments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Treatment'\n          description: ''\n  /api/treatments/treatments/by_patient/:\n    get:\n      operationId: treatments_treatments_by_patient_retrieve\n      description: Get treatments grouped by patient.\n      tags:\n      - treatments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Treatment'\n          description: ''\n  /api/treatments/treatments/statistics/:\n    get:\n      operationId: treatments_treatments_statistics_retrieve\n      description: Get treatment statistics.\n      tags:\n      - treatments\n      security:\n      - jwtAuth: []\n      responses:\n        '200':\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Treatment'\n          description: ''\ncomponents:\n  schemas:\n    Appointment:\n      type: object\n      description: Serializer for Appointment model.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        hospital:\n          type: string\n          format: uuid\n          nullable: true\n        hospital_name:\n          type: string\n          readOnly: true\n        patient:\n          type: string\n          format: uuid\n        patient_name:\n          type: string\n          readOnly: true\n        patient_email:\n          type: string\n          format: email\n          readOnly: true\n        doctor:\n          type: string\n          format: uuid\n        doctor_name:\n          type: string\n          readOnly: true\n        doctor_email:\n          type: string\n          format: email\n          readOnly: true\n        doctor_specialization:\n          type: string\n          readOnly: true\n        appointment_type:\n          $ref: '#/components/schemas/AppointmentTypeEnum'\n        status:\n          $ref: '#/components/schemas/StatusA1cEnum'\n        scheduled_date:\n          type: string\n          format: date\n        scheduled_time:\n          type: string\n          format: time\n        duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        end_time:\n          type: string\n          format: time\n          readOnly: true\n          nullable: true\n        slot:\n          type: string\n          format: uuid\n          nullable: true\n          description: The doctor availability slot this appointment was booked in\n        slot_details:\n          allOf:\n          - $ref: '#/components/schemas/DoctorAvailabilitySlot'\n          readOnly: true\n        check_in_time:\n          type: string\n          format: date-time\n          nullable: true\n        start_time:\n          type: string\n          format: date-time\n          nullable: true\n        end_time_actual:\n          type: string\n          format: date-time\n          nullable: true\n        reason:\n          type: string\n        symptoms:\n          type: string\n        notes:\n          type: string\n        is_telemedicine:\n          type: boolean\n        meeting_link:\n          type: string\n          format: uri\n          maxLength: 200\n        meeting_id:\n          type: string\n          maxLength: 100\n        meeting_password:\n          type: string\n          maxLength: 100\n        is_follow_up:\n          type: boolean\n        parent_appointment:\n          type: string\n          format: uuid\n          nullable: true\n        cancellation_reason:\n          type: string\n        cancelled_by:\n          type: string\n          format: uuid\n          nullable: true\n        cancelled_at:\n          type: string\n          format: date-time\n          nullable: true\n        rescheduled_from:\n          type: string\n          format: uuid\n          nullable: true\n        reminder_sent:\n          type: boolean\n        reminder_sent_at:\n          type: string\n          format: date-time\n          nullable: true\n        is_past:\n          type: boolean\n          readOnly: true\n        is_today:\n          type: boolean\n          readOnly: true\n        is_upcoming:\n          type: boolean\n          readOnly: true\n        metadata: {}\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - created_at\n      - doctor\n      - doctor_email\n      - doctor_name\n      - doctor_specialization\n      - end_time\n      - hospital_name\n      - id\n      - is_past\n      - is_today\n      - is_upcoming\n      - patient\n      - patient_email\n      - patient_name\n      - reason\n      - scheduled_date\n      - scheduled_time\n      - slot_details\n      - updated_at\n    AppointmentCreate:\n      type: object\n      description: Simplified serializer for creating appointments.\n      properties:\n        patient:\n          type: string\n          format: uuid\n        doctor:\n          type: string\n          format: uuid\n        appointment_type:\n          $ref: '#/components/schemas/AppointmentTypeEnum'\n        scheduled_date:\n          type: string\n          format: date\n        scheduled_time:\n          type: string\n          format: time\n        duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        slot:\n          type: string\n          format: uuid\n          nullable: true\n          description: The doctor availability slot this appointment was booked in\n        reason:\n          type: string\n        symptoms:\n          type: string\n        notes:\n          type: string\n        is_telemedicine:\n          type: boolean\n      required:\n      - doctor\n      - patient\n      - reason\n      - scheduled_date\n      - scheduled_time\n    AppointmentCreateRequest:\n      type: object\n      description: Simplified serializer for creating appointments.\n      properties:\n        patient:\n          type: string\n          format: uuid\n        doctor:\n          type: string\n          format: uuid\n        appointment_type:\n          $ref: '#/components/schemas/AppointmentTypeEnum'\n        scheduled_date:\n          type: string\n          format: date\n        scheduled_time:\n          type: string\n          format: time\n        duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        slot:\n          type: string\n          format: uuid\n          nullable: true\n          description: The doctor availability slot this appointment was booked in\n        reason:\n          type: string\n          minLength: 1\n        symptoms:\n          type: string\n        notes:\n          type: string\n        is_telemedicine:\n          type: boolean\n      required:\n      - doctor\n      - patient\n      - reason\n      - scheduled_date\n      - scheduled_time\n    AppointmentRequest:\n      type: object\n      description: Serializer for Appointment model.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          nullable: true\n        patient:\n          type: string\n          format: uuid\n        doctor:\n          type: string\n          format: uuid\n        appointment_type:\n          $ref: '#/components/schemas/AppointmentTypeEnum'\n        status:\n          $ref: '#/components/schemas/StatusA1cEnum'\n        scheduled_date:\n          type: string\n          format: date\n        scheduled_time:\n          type: string\n          format: time\n        duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        slot:\n          type: string\n          format: uuid\n          nullable: true\n          description: The doctor availability slot this appointment was booked in\n        check_in_time:\n          type: string\n          format: date-time\n          nullable: true\n        start_time:\n          type: string\n          format: date-time\n          nullable: true\n        end_time_actual:\n          type: string\n          format: date-time\n          nullable: true\n        reason:\n          type: string\n          minLength: 1\n        symptoms:\n          type: string\n        notes:\n          type: string\n        is_telemedicine:\n          type: boolean\n        meeting_link:\n          type: string\n          format: uri\n          maxLength: 200\n        meeting_id:\n          type: string\n          maxLength: 100\n        meeting_password:\n          type: string\n          maxLength: 100\n        is_follow_up:\n          type: boolean\n        parent_appointment:\n          type: string\n          format: uuid\n          nullable: true\n        cancellation_reason:\n          type: string\n        cancelled_by:\n          type: string\n          format: uuid\n          nullable: true\n        cancelled_at:\n          type: string\n          format: date-time\n          nullable: true\n        rescheduled_from:\n          type: string\n          format: uuid\n          nullable: true\n        reminder_sent:\n          type: boolean\n        reminder_sent_at:\n          type: string\n          format: date-time\n          nullable: true\n        metadata: {}\n      required:\n      - doctor\n      - patient\n      - reason\n      - scheduled_date\n      - scheduled_time\n    AppointmentTypeEnum:\n      enum:\n      - CONSULTATION\n      - FOLLOW_UP\n      - ROUTINE_CHECKUP\n      - EMERGENCY\n      - TELEMEDICINE\n      - VACCINATION\n      - LAB_TEST\n      - SURGERY\n      - THERAPY\n      type: string\n      description: |-\n        * `CONSULTATION` - Consultation\n        * `FOLLOW_UP` - Follow-up\n        * `ROUTINE_CHECKUP` - Routine Checkup\n        * `EMERGENCY` - Emergency\n        * `TELEMEDICINE` - Telemedicine\n        * `VACCINATION` - Vaccination\n        * `LAB_TEST` - Lab Test\n        * `SURGERY` - Surgery\n        * `THERAPY` - Therapy\n    AppointmentUpdate:\n      type: object\n      description: Serializer for updating appointment details.\n      properties:\n        status:\n          $ref: '#/components/schemas/StatusA1cEnum'\n        appointment_type:\n          $ref: '#/components/schemas/AppointmentTypeEnum'\n        scheduled_date:\n          type: string\n          format: date\n        scheduled_time:\n          type: string\n          format: time\n        duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        reason:\n          type: string\n        symptoms:\n          type: string\n        notes:\n          type: string\n        check_in_time:\n          type: string\n          format: date-time\n          nullable: true\n        start_time:\n          type: string\n          format: date-time\n          nullable: true\n        end_time_actual:\n          type: string\n          format: date-time\n          nullable: true\n        cancellation_reason:\n          type: string\n        cancelled_by:\n          type: string\n          format: uuid\n          nullable: true\n        cancelled_at:\n          type: string\n          format: date-time\n          nullable: true\n      required:\n      - reason\n      - scheduled_date\n      - scheduled_time\n    AppointmentUpdateRequest:\n      type: object\n      description: Serializer for updating appointment details.\n      properties:\n        status:\n          $ref: '#/components/schemas/StatusA1cEnum'\n        appointment_type:\n          $ref: '#/components/schemas/AppointmentTypeEnum'\n        scheduled_date:\n          type: string\n          format: date\n        scheduled_time:\n          type: string\n          format: time\n        duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        reason:\n          type: string\n          minLength: 1\n        symptoms:\n          type: string\n        notes:\n          type: string\n        check_in_time:\n          type: string\n          format: date-time\n          nullable: true\n        start_time:\n          type: string\n          format: date-time\n          nullable: true\n        end_time_actual:\n          type: string\n          format: date-time\n          nullable: true\n        cancellation_reason:\n          type: string\n        cancelled_by:\n          type: string\n          format: uuid\n          nullable: true\n        cancelled_at:\n          type: string\n          format: date-time\n          nullable: true\n      required:\n      - reason\n      - scheduled_date\n      - scheduled_time\n    BillingCycleEnum:\n      enum:\n      - MONTHLY\n      - QUARTERLY\n      - SEMI_ANNUAL\n      - ANNUAL\n      - ONE_TIME\n      type: string\n      description: |-\n        * `MONTHLY` - Monthly\n        * `QUARTERLY` - Quarterly\n        * `SEMI_ANNUAL` - Semi-Annual\n        * `ANNUAL` - Annual\n        * `ONE_TIME` - One-Time\n    BlankEnum:\n      enum:\n      - ''\n    ChangePasswordRequest:\n      type: object\n      description: Serializer for changing password.\n      properties:\n        old_password:\n          type: string\n          writeOnly: true\n          minLength: 1\n        new_password:\n          type: string\n          writeOnly: true\n          minLength: 8\n        new_password_confirm:\n          type: string\n          writeOnly: true\n          minLength: 1\n      required:\n      - new_password\n      - new_password_confirm\n      - old_password\n    CodeEnum:\n      enum:\n      - general_medicine\n      - pediatrics\n      - gynecology\n      - cardiology\n      - dermatology\n      - orthopedics\n      - psychiatry\n      - neurology\n      - ophthalmology\n      - ent\n      - radiology\n      - anesthesiology\n      - surgery\n      - urology\n      - nephrology\n      - endocrinology\n      - gastroenterology\n      - pulmonology\n      - oncology\n      - rheumatology\n      - emergency_medicine\n      - family_medicine\n      - internal_medicine\n      - obstetrics\n      - pathology\n      - plastic_surgery\n      - sports_medicine\n      type: string\n      description: |-\n        * `general_medicine` - General Medicine\n        * `pediatrics` - Pediatrics\n        * `gynecology` - Gynecology\n        * `cardiology` - Cardiology\n        * `dermatology` - Dermatology\n        * `orthopedics` - Orthopedics\n        * `psychiatry` - Psychiatry\n        * `neurology` - Neurology\n        * `ophthalmology` - Ophthalmology\n        * `ent` - ENT (Ear, Nose, and Throat)\n        * `radiology` - Radiology\n        * `anesthesiology` - Anesthesiology\n        * `surgery` - General Surgery\n        * `urology` - Urology\n        * `nephrology` - Nephrology\n        * `endocrinology` - Endocrinology\n        * `gastroenterology` - Gastroenterology\n        * `pulmonology` - Pulmonology\n        * `oncology` - Oncology\n        * `rheumatology` - Rheumatology\n        * `emergency_medicine` - Emergency Medicine\n        * `family_medicine` - Family Medicine\n        * `internal_medicine` - Internal Medicine\n        * `obstetrics` - Obstetrics\n        * `pathology` - Pathology\n        * `plastic_surgery` - Plastic Surgery\n        * `sports_medicine` - Sports Medicine\n    CreateMedicalRecord:\n      type: object\n      description: Serializer for creating medical records with documents.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this record belongs to\n        patient:\n          type: string\n          format: uuid\n        created_by:\n          type: string\n          format: uuid\n          nullable: true\n        record_type:\n          $ref: '#/components/schemas/RecordTypeEnum'\n        title:\n          type: string\n          maxLength: 255\n        description:\n          type: string\n        diagnosis:\n          type: string\n        symptoms:\n          type: string\n        vital_signs: {}\n        lab_results: {}\n        attachments: {}\n        appointment:\n          type: string\n          format: uuid\n          nullable: true\n        is_confidential:\n          type: boolean\n        access_restricted:\n          type: boolean\n        metadata: {}\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/MedicalDocument'\n      required:\n      - description\n      - hospital\n      - patient\n      - title\n    CreateMedicalRecordRequest:\n      type: object\n      description: Serializer for creating medical records with documents.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this record belongs to\n        patient:\n          type: string\n          format: uuid\n        created_by:\n          type: string\n          format: uuid\n          nullable: true\n        record_type:\n          $ref: '#/components/schemas/RecordTypeEnum'\n        title:\n          type: string\n          minLength: 1\n          maxLength: 255\n        description:\n          type: string\n          minLength: 1\n        diagnosis:\n          type: string\n        symptoms:\n          type: string\n        vital_signs: {}\n        lab_results: {}\n        attachments: {}\n        appointment:\n          type: string\n          format: uuid\n          nullable: true\n        is_confidential:\n          type: boolean\n        access_restricted:\n          type: boolean\n        metadata: {}\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/MedicalDocumentRequest'\n      required:\n      - description\n      - hospital\n      - patient\n      - title\n    CreateSubscription:\n      type: object\n      description: Serializer for creating/updating subscriptions.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this subscription belongs to\n        plan:\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/Status1f0Enum'\n        start_date:\n          type: string\n          format: date-time\n        end_date:\n          type: string\n          format: date-time\n        trial_end_date:\n          type: string\n          format: date-time\n          nullable: true\n        current_period_start:\n          type: string\n          format: date-time\n        current_period_end:\n          type: string\n          format: date-time\n        next_billing_date:\n          type: string\n          format: date-time\n          nullable: true\n        payment_method:\n          type: string\n          maxLength: 50\n        auto_renew:\n          type: boolean\n        metadata: {}\n      required:\n      - current_period_end\n      - current_period_start\n      - end_date\n      - hospital\n      - plan\n      - start_date\n    CreateSubscriptionRequest:\n      type: object\n      description: Serializer for creating/updating subscriptions.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this subscription belongs to\n        plan:\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/Status1f0Enum'\n        start_date:\n          type: string\n          format: date-time\n        end_date:\n          type: string\n          format: date-time\n        trial_end_date:\n          type: string\n          format: date-time\n          nullable: true\n        current_period_start:\n          type: string\n          format: date-time\n        current_period_end:\n          type: string\n          format: date-time\n        next_billing_date:\n          type: string\n          format: date-time\n          nullable: true\n        payment_method:\n          type: string\n          maxLength: 50\n        auto_renew:\n          type: boolean\n        metadata: {}\n      required:\n      - current_period_end\n      - current_period_start\n      - end_date\n      - hospital\n      - plan\n      - start_date\n    CreateTreatment:\n      type: object\n      description: Serializer for creating treatments with prescriptions.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this treatment belongs to\n        patient:\n          type: string\n          format: uuid\n        prescribed_by:\n          type: string\n          format: uuid\n          nullable: true\n        treatment_type:\n          $ref: '#/components/schemas/TreatmentTypeEnum'\n        name:\n          type: string\n          maxLength: 255\n        description:\n          type: string\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n          nullable: true\n        status:\n          $ref: '#/components/schemas/StatusA4bEnum'\n        instructions:\n          type: string\n        frequency:\n          type: string\n          maxLength: 100\n        dosage:\n          type: string\n          maxLength: 100\n        duration:\n          type: string\n          maxLength: 100\n        side_effects:\n          type: string\n        warnings:\n          type: string\n        appointment:\n          type: string\n          format: uuid\n          nullable: true\n        medical_record:\n          type: string\n          format: uuid\n          nullable: true\n        metadata: {}\n        prescriptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Prescription'\n      required:\n      - description\n      - hospital\n      - instructions\n      - name\n      - patient\n      - start_date\n      - treatment_type\n    CreateTreatmentRequest:\n      type: object\n      description: Serializer for creating treatments with prescriptions.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this treatment belongs to\n        patient:\n          type: string\n          format: uuid\n        prescribed_by:\n          type: string\n          format: uuid\n          nullable: true\n        treatment_type:\n          $ref: '#/components/schemas/TreatmentTypeEnum'\n        name:\n          type: string\n          minLength: 1\n          maxLength: 255\n        description:\n          type: string\n          minLength: 1\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n          nullable: true\n        status:\n          $ref: '#/components/schemas/StatusA4bEnum'\n        instructions:\n          type: string\n          minLength: 1\n        frequency:\n          type: string\n          maxLength: 100\n        dosage:\n          type: string\n          maxLength: 100\n        duration:\n          type: string\n          maxLength: 100\n        side_effects:\n          type: string\n        warnings:\n          type: string\n        appointment:\n          type: string\n          format: uuid\n          nullable: true\n        medical_record:\n          type: string\n          format: uuid\n          nullable: true\n        metadata: {}\n        prescriptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/PrescriptionRequest'\n      required:\n      - description\n      - hospital\n      - instructions\n      - name\n      - patient\n      - start_date\n      - treatment_type\n    DayOfWeekEnum:\n      enum:\n      - 0\n      - 1\n      - 2\n      - 3\n      - 4\n      - 5\n      - 6\n      type: integer\n      description: |-\n        * `0` - Monday\n        * `1` - Tuesday\n        * `2` - Wednesday\n        * `3` - Thursday\n        * `4` - Friday\n        * `5` - Saturday\n        * `6` - Sunday\n    Doctor:\n      type: object\n      description: Serializer for doctor users with specialization information.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        username:\n          type: string\n          nullable: true\n          maxLength: 150\n        first_name:\n          type: string\n          maxLength: 100\n        last_name:\n          type: string\n          maxLength: 100\n        full_name:\n          type: string\n          readOnly: true\n        phone_number:\n          type: string\n          maxLength: 20\n        date_of_birth:\n          type: string\n          format: date\n          nullable: true\n        gender:\n          oneOf:\n          - $ref: '#/components/schemas/GenderEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n        role:\n          $ref: '#/components/schemas/RoleEnum'\n        hospital:\n          type: string\n          format: uuid\n          nullable: true\n        hospital_name:\n          type: string\n          readOnly: true\n        department:\n          type: string\n          maxLength: 200\n        specialization:\n          type: string\n          maxLength: 200\n        is_active:\n          type: boolean\n        is_verified:\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        profile_picture:\n          type: string\n          format: uri\n          nullable: true\n        bio:\n          type: string\n        preferred_language:\n          type: string\n          maxLength: 10\n        timezone:\n          type: string\n          maxLength: 50\n        doctor_specialties:\n          type: string\n          readOnly: true\n        primary_specialty:\n          type: string\n          readOnly: true\n        license_number:\n          type: string\n          maxLength: 100\n        years_of_experience:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          nullable: true\n        appointments_count:\n          type: integer\n          readOnly: true\n        patients_count:\n          type: integer\n          readOnly: true\n        specialties:\n          type: string\n          readOnly: true\n      required:\n      - appointments_count\n      - created_at\n      - doctor_specialties\n      - email\n      - first_name\n      - full_name\n      - hospital_name\n      - id\n      - last_name\n      - patients_count\n      - primary_specialty\n      - specialties\n      - updated_at\n    DoctorAvailabilitySlot:\n      type: object\n      description: Serializer for DoctorAvailabilitySlot model.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        hospital:\n          type: string\n          format: uuid\n          nullable: true\n        hospital_name:\n          type: string\n          readOnly: true\n        doctor:\n          type: string\n          format: uuid\n        doctor_name:\n          type: string\n          readOnly: true\n        doctor_email:\n          type: string\n          format: email\n          readOnly: true\n        doctor_specialization:\n          type: string\n          readOnly: true\n        start_time:\n          type: string\n          format: date-time\n          description: Slot start date and time\n        end_time:\n          type: string\n          format: date-time\n          description: Slot end date and time\n        duration:\n          type: integer\n          readOnly: true\n        slot_duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Duration of each appointment slot in minutes\n        max_appointments:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Maximum number of appointments that can be booked in this slot\n        current_appointments:\n          type: integer\n          readOnly: true\n          description: Current number of appointments booked in this slot\n        status:\n          $ref: '#/components/schemas/Status289Enum'\n        is_recurring:\n          type: boolean\n        recurrence_pattern:\n          $ref: '#/components/schemas/RecurrencePatternEnum'\n        recurrence_end_date:\n          type: string\n          format: date\n          nullable: true\n        day_of_week:\n          nullable: true\n          description: |-\n            For weekly recurring slots\n\n            * `0` - Monday\n            * `1` - Tuesday\n            * `2` - Wednesday\n            * `3` - Thursday\n            * `4` - Friday\n            * `5` - Saturday\n            * `6` - Sunday\n          minimum: -9223372036854775808\n          maximum: 9223372036854775807\n          oneOf:\n          - $ref: '#/components/schemas/DayOfWeekEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        allowed_appointment_types:\n          description: List of appointment types allowed in this slot\n        notes:\n          type: string\n        advance_booking_days:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: How many days in advance this slot can be booked\n        minimum_notice_hours:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Minimum hours notice required for booking\n        is_available:\n          type: boolean\n          readOnly: true\n        is_past:\n          type: boolean\n          readOnly: true\n        available_spots:\n          type: integer\n          readOnly: true\n        time_slots:\n          type: string\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - available_spots\n      - current_appointments\n      - doctor\n      - doctor_email\n      - doctor_name\n      - doctor_specialization\n      - duration\n      - end_time\n      - hospital_name\n      - id\n      - is_available\n      - is_past\n      - start_time\n      - time_slots\n      - updated_at\n    DoctorAvailabilitySlotCreate:\n      type: object\n      description: Serializer for creating doctor availability slots.\n      properties:\n        doctor:\n          type: string\n          format: uuid\n        start_time:\n          type: string\n          format: date-time\n          description: Slot start date and time\n        end_time:\n          type: string\n          format: date-time\n          description: Slot end date and time\n        slot_duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Duration of each appointment slot in minutes\n        max_appointments:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Maximum number of appointments that can be booked in this slot\n        status:\n          $ref: '#/components/schemas/Status289Enum'\n        is_recurring:\n          type: boolean\n        recurrence_pattern:\n          $ref: '#/components/schemas/RecurrencePatternEnum'\n        recurrence_end_date:\n          type: string\n          format: date\n          nullable: true\n        day_of_week:\n          nullable: true\n          description: |-\n            For weekly recurring slots\n\n            * `0` - Monday\n            * `1` - Tuesday\n            * `2` - Wednesday\n            * `3` - Thursday\n            * `4` - Friday\n            * `5` - Saturday\n            * `6` - Sunday\n          minimum: -9223372036854775808\n          maximum: 9223372036854775807\n          oneOf:\n          - $ref: '#/components/schemas/DayOfWeekEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        allowed_appointment_types:\n          description: List of appointment types allowed in this slot\n        notes:\n          type: string\n        advance_booking_days:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: How many days in advance this slot can be booked\n        minimum_notice_hours:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Minimum hours notice required for booking\n      required:\n      - doctor\n      - end_time\n      - start_time\n    DoctorAvailabilitySlotCreateRequest:\n      type: object\n      description: Serializer for creating doctor availability slots.\n      properties:\n        doctor:\n          type: string\n          format: uuid\n        start_time:\n          type: string\n          format: date-time\n          description: Slot start date and time\n        end_time:\n          type: string\n          format: date-time\n          description: Slot end date and time\n        slot_duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Duration of each appointment slot in minutes\n        max_appointments:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Maximum number of appointments that can be booked in this slot\n        status:\n          $ref: '#/components/schemas/Status289Enum'\n        is_recurring:\n          type: boolean\n        recurrence_pattern:\n          $ref: '#/components/schemas/RecurrencePatternEnum'\n        recurrence_end_date:\n          type: string\n          format: date\n          nullable: true\n        day_of_week:\n          nullable: true\n          description: |-\n            For weekly recurring slots\n\n            * `0` - Monday\n            * `1` - Tuesday\n            * `2` - Wednesday\n            * `3` - Thursday\n            * `4` - Friday\n            * `5` - Saturday\n            * `6` - Sunday\n          minimum: -9223372036854775808\n          maximum: 9223372036854775807\n          oneOf:\n          - $ref: '#/components/schemas/DayOfWeekEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        allowed_appointment_types:\n          description: List of appointment types allowed in this slot\n        notes:\n          type: string\n        advance_booking_days:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: How many days in advance this slot can be booked\n        minimum_notice_hours:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Minimum hours notice required for booking\n        generate_slots:\n          type: boolean\n          writeOnly: true\n          default: false\n          description: If true, generate multiple slots based on slot_duration_minutes\n      required:\n      - doctor\n      - end_time\n      - start_time\n    DoctorAvailabilitySlotRequest:\n      type: object\n      description: Serializer for DoctorAvailabilitySlot model.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          nullable: true\n        doctor:\n          type: string\n          format: uuid\n        start_time:\n          type: string\n          format: date-time\n          description: Slot start date and time\n        end_time:\n          type: string\n          format: date-time\n          description: Slot end date and time\n        slot_duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Duration of each appointment slot in minutes\n        max_appointments:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Maximum number of appointments that can be booked in this slot\n        status:\n          $ref: '#/components/schemas/Status289Enum'\n        is_recurring:\n          type: boolean\n        recurrence_pattern:\n          $ref: '#/components/schemas/RecurrencePatternEnum'\n        recurrence_end_date:\n          type: string\n          format: date\n          nullable: true\n        day_of_week:\n          nullable: true\n          description: |-\n            For weekly recurring slots\n\n            * `0` - Monday\n            * `1` - Tuesday\n            * `2` - Wednesday\n            * `3` - Thursday\n            * `4` - Friday\n            * `5` - Saturday\n            * `6` - Sunday\n          minimum: -9223372036854775808\n          maximum: 9223372036854775807\n          oneOf:\n          - $ref: '#/components/schemas/DayOfWeekEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        allowed_appointment_types:\n          description: List of appointment types allowed in this slot\n        notes:\n          type: string\n        advance_booking_days:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: How many days in advance this slot can be booked\n        minimum_notice_hours:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Minimum hours notice required for booking\n        created_at:\n          type: string\n          format: date-time\n      required:\n      - doctor\n      - end_time\n      - start_time\n    DoctorSpecialty:\n      type: object\n      description: Serializer for DoctorSpecialty relationship\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        doctor:\n          type: string\n          format: uuid\n        doctor_name:\n          type: string\n          readOnly: true\n        specialty:\n          type: integer\n        specialty_details:\n          allOf:\n          - $ref: '#/components/schemas/Specialty'\n          readOnly: true\n        is_primary:\n          type: boolean\n          description: Is this the doctor's primary specialization?\n        certification_date:\n          type: string\n          format: date\n          nullable: true\n        certification_number:\n          type: string\n          nullable: true\n          maxLength: 100\n        institution:\n          type: string\n          nullable: true\n          description: Institution where specialization was obtained\n          maxLength: 200\n        years_of_experience:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - created_at\n      - doctor\n      - doctor_name\n      - id\n      - specialty\n      - specialty_details\n      - updated_at\n    DoctorSpecialtyCreate:\n      type: object\n      description: Serializer for creating doctor specialties\n      properties:\n        doctor:\n          type: string\n          format: uuid\n        specialty:\n          type: integer\n        is_primary:\n          type: boolean\n          description: Is this the doctor's primary specialization?\n        certification_date:\n          type: string\n          format: date\n          nullable: true\n        certification_number:\n          type: string\n          nullable: true\n          maxLength: 100\n        institution:\n          type: string\n          nullable: true\n          description: Institution where specialization was obtained\n          maxLength: 200\n        years_of_experience:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n      required:\n      - doctor\n      - specialty\n    DoctorSpecialtyCreateRequest:\n      type: object\n      description: Serializer for creating doctor specialties\n      properties:\n        doctor:\n          type: string\n          format: uuid\n        specialty:\n          type: integer\n        is_primary:\n          type: boolean\n          description: Is this the doctor's primary specialization?\n        certification_date:\n          type: string\n          format: date\n          nullable: true\n        certification_number:\n          type: string\n          nullable: true\n          maxLength: 100\n        institution:\n          type: string\n          nullable: true\n          description: Institution where specialization was obtained\n          maxLength: 200\n        years_of_experience:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n      required:\n      - doctor\n      - specialty\n    DoctorSpecialtyRequest:\n      type: object\n      description: Serializer for DoctorSpecialty relationship\n      properties:\n        doctor:\n          type: string\n          format: uuid\n        specialty:\n          type: integer\n        is_primary:\n          type: boolean\n          description: Is this the doctor's primary specialization?\n        certification_date:\n          type: string\n          format: date\n          nullable: true\n        certification_number:\n          type: string\n          nullable: true\n          maxLength: 100\n        institution:\n          type: string\n          nullable: true\n          description: Institution where specialization was obtained\n          maxLength: 200\n        years_of_experience:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n      required:\n      - doctor\n      - specialty\n    DocumentTypeEnum:\n      enum:\n      - PDF\n      - IMAGE\n      - XRAY\n      - MRI\n      - CT\n      - LAB_REPORT\n      - PRESCRIPTION\n      - OTHER\n      type: string\n      description: |-\n        * `PDF` - PDF Document\n        * `IMAGE` - Image\n        * `XRAY` - X-Ray\n        * `MRI` - MRI Scan\n        * `CT` - CT Scan\n        * `LAB_REPORT` - Lab Report\n        * `PRESCRIPTION` - Prescription\n        * `OTHER` - Other\n    EmailRequest:\n      type: object\n      description: Serializer for creating email requests.\n      properties:\n        full_name:\n          type: string\n          maxLength: 50\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        phone:\n          type: string\n          maxLength: 20\n        job_profession:\n          type: string\n          maxLength: 200\n        subject:\n          type: string\n          maxLength: 200\n        message:\n          type: string\n        file_attached:\n          type: string\n          format: uri\n          nullable: true\n          description: Optional file attachment\n      required:\n      - email\n    EmailRequestDetail:\n      type: object\n      description: Serializer for viewing email request details.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        full_name:\n          type: string\n          maxLength: 50\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        phone:\n          type: string\n          maxLength: 20\n        job_profession:\n          type: string\n          maxLength: 200\n        subject:\n          type: string\n          maxLength: 200\n        message:\n          type: string\n        file_attached:\n          type: string\n          format: uri\n          nullable: true\n          description: Optional file attachment\n        has_attachment:\n          type: boolean\n          readOnly: true\n        status:\n          allOf:\n          - $ref: '#/components/schemas/Status911Enum'\n          readOnly: true\n        error_message:\n          type: string\n          readOnly: true\n        retry_count:\n          type: integer\n          readOnly: true\n        max_retries:\n          type: integer\n          readOnly: true\n        is_completed:\n          type: boolean\n          readOnly: true\n        can_retry:\n          type: boolean\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        sent_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n      required:\n      - can_retry\n      - created_at\n      - email\n      - error_message\n      - has_attachment\n      - id\n      - is_completed\n      - max_retries\n      - retry_count\n      - sent_at\n      - status\n      - updated_at\n    EmailRequestDetailRequest:\n      type: object\n      description: Serializer for viewing email request details.\n      properties:\n        full_name:\n          type: string\n          maxLength: 50\n        email:\n          type: string\n          format: email\n          minLength: 1\n          maxLength: 254\n        phone:\n          type: string\n          maxLength: 20\n        job_profession:\n          type: string\n          maxLength: 200\n        subject:\n          type: string\n          minLength: 1\n          maxLength: 200\n        message:\n          type: string\n        file_attached:\n          type: string\n          format: binary\n          nullable: true\n          description: Optional file attachment\n      required:\n      - email\n    EmailRequestList:\n      type: object\n      description: Serializer for listing email requests.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        full_name:\n          type: string\n          readOnly: true\n        email:\n          type: string\n          format: email\n          readOnly: true\n        phone:\n          type: string\n          readOnly: true\n        job_profession:\n          type: string\n          readOnly: true\n        subject:\n          type: string\n          readOnly: true\n        status:\n          allOf:\n          - $ref: '#/components/schemas/Status911Enum'\n          readOnly: true\n        has_attachment:\n          type: boolean\n          readOnly: true\n        is_completed:\n          type: boolean\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        sent_at:\n          type: string\n          format: date-time\n          readOnly: true\n          nullable: true\n      required:\n      - created_at\n      - email\n      - full_name\n      - has_attachment\n      - id\n      - is_completed\n      - job_profession\n      - phone\n      - sent_at\n      - status\n      - subject\n    EmailRequestRequest:\n      type: object\n      description: Serializer for creating email requests.\n      properties:\n        full_name:\n          type: string\n          maxLength: 50\n        email:\n          type: string\n          format: email\n          minLength: 1\n          maxLength: 254\n        phone:\n          type: string\n          maxLength: 20\n        job_profession:\n          type: string\n          maxLength: 200\n        subject:\n          type: string\n          minLength: 1\n          maxLength: 200\n        message:\n          type: string\n        file_attached:\n          type: string\n          format: binary\n          nullable: true\n          description: Optional file attachment\n      required:\n      - email\n    GenderEnum:\n      enum:\n      - M\n      - F\n      - O\n      type: string\n      description: |-\n        * `M` - Male\n        * `F` - Female\n        * `O` - Other\n    Hospital:\n      type: object\n      description: Serializer for Hospital model.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          maxLength: 200\n        slug:\n          type: string\n          readOnly: true\n          pattern: ^[-a-zA-Z0-9_]+$\n        hospital_type:\n          $ref: '#/components/schemas/HospitalTypeEnum'\n        description:\n          type: string\n        phone_number:\n          type: string\n          maxLength: 20\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        website:\n          type: string\n          format: uri\n          maxLength: 200\n        address_line1:\n          type: string\n          maxLength: 255\n        address_line2:\n          type: string\n          maxLength: 255\n        city:\n          type: string\n          maxLength: 100\n        state:\n          type: string\n          maxLength: 100\n        country:\n          type: string\n          maxLength: 100\n        postal_code:\n          type: string\n          maxLength: 20\n        latitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        longitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        full_address:\n          type: string\n          readOnly: true\n        location_coordinates:\n          type: string\n          readOnly: true\n        bed_count:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          nullable: true\n        emergency_services:\n          type: boolean\n        trauma_center_level:\n          type: string\n          maxLength: 10\n        operating_hours: {}\n        services: {}\n        accreditations: {}\n        license_number:\n          type: string\n          maxLength: 100\n        is_active:\n          type: boolean\n        is_verified:\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        is_emergency_capable:\n          type: boolean\n          readOnly: true\n        is_trauma_center:\n          type: boolean\n          readOnly: true\n      required:\n      - address_line1\n      - city\n      - created_at\n      - full_address\n      - id\n      - is_emergency_capable\n      - is_trauma_center\n      - location_coordinates\n      - name\n      - postal_code\n      - slug\n      - state\n      - updated_at\n    HospitalCreate:\n      type: object\n      description: Serializer for creating new hospitals.\n      properties:\n        name:\n          type: string\n          maxLength: 200\n        hospital_type:\n          $ref: '#/components/schemas/HospitalTypeEnum'\n        description:\n          type: string\n        phone_number:\n          type: string\n          maxLength: 20\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        website:\n          type: string\n          format: uri\n          maxLength: 200\n        address_line1:\n          type: string\n          maxLength: 255\n        address_line2:\n          type: string\n          maxLength: 255\n        city:\n          type: string\n          maxLength: 100\n        state:\n          type: string\n          maxLength: 100\n        country:\n          type: string\n          maxLength: 100\n        postal_code:\n          type: string\n          maxLength: 20\n        latitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        longitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        bed_count:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          nullable: true\n        emergency_services:\n          type: boolean\n        trauma_center_level:\n          type: string\n          maxLength: 10\n        operating_hours: {}\n        services: {}\n        accreditations: {}\n        license_number:\n          type: string\n          maxLength: 100\n      required:\n      - address_line1\n      - city\n      - name\n      - postal_code\n      - state\n    HospitalCreateRequest:\n      type: object\n      description: Serializer for creating new hospitals.\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 200\n        hospital_type:\n          $ref: '#/components/schemas/HospitalTypeEnum'\n        description:\n          type: string\n        phone_number:\n          type: string\n          maxLength: 20\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        website:\n          type: string\n          format: uri\n          maxLength: 200\n        address_line1:\n          type: string\n          minLength: 1\n          maxLength: 255\n        address_line2:\n          type: string\n          maxLength: 255\n        city:\n          type: string\n          minLength: 1\n          maxLength: 100\n        state:\n          type: string\n          minLength: 1\n          maxLength: 100\n        country:\n          type: string\n          minLength: 1\n          maxLength: 100\n        postal_code:\n          type: string\n          minLength: 1\n          maxLength: 20\n        latitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        longitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        bed_count:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          nullable: true\n        emergency_services:\n          type: boolean\n        trauma_center_level:\n          type: string\n          maxLength: 10\n        operating_hours: {}\n        services: {}\n        accreditations: {}\n        license_number:\n          type: string\n          maxLength: 100\n      required:\n      - address_line1\n      - city\n      - name\n      - postal_code\n      - state\n    HospitalList:\n      type: object\n      description: Simplified serializer for hospital lists.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          maxLength: 200\n        slug:\n          type: string\n          maxLength: 200\n          pattern: ^[-a-zA-Z0-9_]+$\n        hospital_type:\n          $ref: '#/components/schemas/HospitalTypeEnum'\n        city:\n          type: string\n          maxLength: 100\n        state:\n          type: string\n          maxLength: 100\n        full_address:\n          type: string\n          readOnly: true\n        emergency_services:\n          type: boolean\n        is_active:\n          type: boolean\n        is_verified:\n          type: boolean\n        is_emergency_capable:\n          type: boolean\n          readOnly: true\n      required:\n      - city\n      - full_address\n      - id\n      - is_emergency_capable\n      - name\n      - state\n    HospitalTypeEnum:\n      enum:\n      - GENERAL\n      - SPECIALTY\n      - CLINIC\n      - MEDICAL_CENTER\n      - URGENT_CARE\n      - REHABILITATION\n      - PSYCHIATRIC\n      - CHILDREN\n      - WOMEN\n      - CANCER\n      type: string\n      description: |-\n        * `GENERAL` - General Hospital\n        * `SPECIALTY` - Specialty Hospital\n        * `CLINIC` - Clinic\n        * `MEDICAL_CENTER` - Medical Center\n        * `URGENT_CARE` - Urgent Care\n        * `REHABILITATION` - Rehabilitation Center\n        * `PSYCHIATRIC` - Psychiatric Hospital\n        * `CHILDREN` - Children's Hospital\n        * `WOMEN` - Women's Hospital\n        * `CANCER` - Cancer Center\n    HospitalUpdate:\n      type: object\n      description: Serializer for updating hospitals.\n      properties:\n        name:\n          type: string\n          maxLength: 200\n        hospital_type:\n          $ref: '#/components/schemas/HospitalTypeEnum'\n        description:\n          type: string\n        phone_number:\n          type: string\n          maxLength: 20\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        website:\n          type: string\n          format: uri\n          maxLength: 200\n        address_line1:\n          type: string\n          maxLength: 255\n        address_line2:\n          type: string\n          maxLength: 255\n        city:\n          type: string\n          maxLength: 100\n        state:\n          type: string\n          maxLength: 100\n        country:\n          type: string\n          maxLength: 100\n        postal_code:\n          type: string\n          maxLength: 20\n        latitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        longitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        bed_count:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          nullable: true\n        emergency_services:\n          type: boolean\n        trauma_center_level:\n          type: string\n          maxLength: 10\n        operating_hours: {}\n        services: {}\n        accreditations: {}\n        license_number:\n          type: string\n          maxLength: 100\n        is_active:\n          type: boolean\n        is_verified:\n          type: boolean\n      required:\n      - address_line1\n      - city\n      - name\n      - postal_code\n      - state\n    HospitalUpdateRequest:\n      type: object\n      description: Serializer for updating hospitals.\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 200\n        hospital_type:\n          $ref: '#/components/schemas/HospitalTypeEnum'\n        description:\n          type: string\n        phone_number:\n          type: string\n          maxLength: 20\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        website:\n          type: string\n          format: uri\n          maxLength: 200\n        address_line1:\n          type: string\n          minLength: 1\n          maxLength: 255\n        address_line2:\n          type: string\n          maxLength: 255\n        city:\n          type: string\n          minLength: 1\n          maxLength: 100\n        state:\n          type: string\n          minLength: 1\n          maxLength: 100\n        country:\n          type: string\n          minLength: 1\n          maxLength: 100\n        postal_code:\n          type: string\n          minLength: 1\n          maxLength: 20\n        latitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        longitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        bed_count:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          nullable: true\n        emergency_services:\n          type: boolean\n        trauma_center_level:\n          type: string\n          maxLength: 10\n        operating_hours: {}\n        services: {}\n        accreditations: {}\n        license_number:\n          type: string\n          maxLength: 100\n        is_active:\n          type: boolean\n        is_verified:\n          type: boolean\n      required:\n      - address_line1\n      - city\n      - name\n      - postal_code\n      - state\n    LoginRequest:\n      type: object\n      description: Serializer for user login.\n      properties:\n        email:\n          type: string\n          format: email\n          minLength: 1\n        password:\n          type: string\n          writeOnly: true\n          minLength: 1\n      required:\n      - email\n      - password\n    MedicalDocument:\n      type: object\n      description: Serializer for MedicalDocument model.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this document belongs to\n        medical_record:\n          type: string\n          format: uuid\n        document_type:\n          $ref: '#/components/schemas/DocumentTypeEnum'\n        title:\n          type: string\n          maxLength: 255\n        description:\n          type: string\n        file:\n          type: string\n          format: uri\n        file_size:\n          type: integer\n          readOnly: true\n        file_type:\n          type: string\n          readOnly: true\n        uploaded_by:\n          type: string\n          format: uuid\n          nullable: true\n        uploaded_by_name:\n          type: string\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - created_at\n      - document_type\n      - file\n      - file_size\n      - file_type\n      - hospital\n      - id\n      - medical_record\n      - title\n      - updated_at\n      - uploaded_by_name\n    MedicalDocumentRequest:\n      type: object\n      description: Serializer for MedicalDocument model.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this document belongs to\n        medical_record:\n          type: string\n          format: uuid\n        document_type:\n          $ref: '#/components/schemas/DocumentTypeEnum'\n        title:\n          type: string\n          minLength: 1\n          maxLength: 255\n        description:\n          type: string\n        file:\n          type: string\n          format: binary\n        uploaded_by:\n          type: string\n          format: uuid\n          nullable: true\n      required:\n      - document_type\n      - file\n      - hospital\n      - medical_record\n      - title\n    MedicalRecord:\n      type: object\n      description: Serializer for MedicalRecord model.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this record belongs to\n        patient:\n          type: string\n          format: uuid\n        patient_name:\n          type: string\n          readOnly: true\n        created_by:\n          type: string\n          format: uuid\n          nullable: true\n        created_by_name:\n          type: string\n          readOnly: true\n        record_type:\n          $ref: '#/components/schemas/RecordTypeEnum'\n        title:\n          type: string\n          maxLength: 255\n        description:\n          type: string\n        diagnosis:\n          type: string\n        symptoms:\n          type: string\n        vital_signs: {}\n        lab_results: {}\n        attachments: {}\n        appointment:\n          type: string\n          format: uuid\n          nullable: true\n        is_confidential:\n          type: boolean\n        access_restricted:\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        metadata: {}\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/MedicalDocument'\n          readOnly: true\n      required:\n      - created_at\n      - created_by_name\n      - description\n      - documents\n      - hospital\n      - id\n      - patient\n      - patient_name\n      - title\n      - updated_at\n    MedicalRecordList:\n      type: object\n      description: Lightweight serializer for medical record listings.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        patient_name:\n          type: string\n          readOnly: true\n        created_by_name:\n          type: string\n          readOnly: true\n        record_type:\n          allOf:\n          - $ref: '#/components/schemas/RecordTypeEnum'\n          readOnly: true\n        title:\n          type: string\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        is_confidential:\n          type: boolean\n          readOnly: true\n        document_count:\n          type: integer\n          readOnly: true\n      required:\n      - created_at\n      - created_by_name\n      - document_count\n      - id\n      - is_confidential\n      - patient_name\n      - record_type\n      - title\n    MedicalRecordRequest:\n      type: object\n      description: Serializer for MedicalRecord model.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this record belongs to\n        patient:\n          type: string\n          format: uuid\n        created_by:\n          type: string\n          format: uuid\n          nullable: true\n        record_type:\n          $ref: '#/components/schemas/RecordTypeEnum'\n        title:\n          type: string\n          minLength: 1\n          maxLength: 255\n        description:\n          type: string\n          minLength: 1\n        diagnosis:\n          type: string\n        symptoms:\n          type: string\n        vital_signs: {}\n        lab_results: {}\n        attachments: {}\n        appointment:\n          type: string\n          format: uuid\n          nullable: true\n        is_confidential:\n          type: boolean\n        access_restricted:\n          type: boolean\n        metadata: {}\n      required:\n      - description\n      - hospital\n      - patient\n      - title\n    NullEnum:\n      enum:\n      - null\n    PaginatedAppointmentList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Appointment'\n    PaginatedDoctorAvailabilitySlotList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/DoctorAvailabilitySlot'\n    PaginatedDoctorList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Doctor'\n    PaginatedDoctorSpecialtyList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/DoctorSpecialty'\n    PaginatedEmailRequestListList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/EmailRequestList'\n    PaginatedHospitalListList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/HospitalList'\n    PaginatedMedicalDocumentList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/MedicalDocument'\n    PaginatedMedicalRecordListList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/MedicalRecordList'\n    PaginatedPatientList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Patient'\n    PaginatedPrescriptionList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Prescription'\n    PaginatedSpecialtyListList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SpecialtyList'\n    PaginatedSpecialtyStatisticsList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SpecialtyStatistics'\n    PaginatedSubscriptionList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/Subscription'\n    PaginatedSubscriptionPlanListList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/SubscriptionPlanList'\n    PaginatedTreatmentListList:\n      type: object\n      properties:\n        count:\n          type: integer\n          example: 123\n        next:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=4\n        previous:\n          type: string\n          nullable: true\n          format: uri\n          example: http://api.example.org/accounts/?page=2\n        results:\n          type: array\n          items:\n            $ref: '#/components/schemas/TreatmentList'\n    PatchedAppointmentUpdateRequest:\n      type: object\n      description: Serializer for updating appointment details.\n      properties:\n        status:\n          $ref: '#/components/schemas/StatusA1cEnum'\n        appointment_type:\n          $ref: '#/components/schemas/AppointmentTypeEnum'\n        scheduled_date:\n          type: string\n          format: date\n        scheduled_time:\n          type: string\n          format: time\n        duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        reason:\n          type: string\n          minLength: 1\n        symptoms:\n          type: string\n        notes:\n          type: string\n        check_in_time:\n          type: string\n          format: date-time\n          nullable: true\n        start_time:\n          type: string\n          format: date-time\n          nullable: true\n        end_time_actual:\n          type: string\n          format: date-time\n          nullable: true\n        cancellation_reason:\n          type: string\n        cancelled_by:\n          type: string\n          format: uuid\n          nullable: true\n        cancelled_at:\n          type: string\n          format: date-time\n          nullable: true\n    PatchedChangePasswordRequest:\n      type: object\n      description: Serializer for changing password.\n      properties:\n        old_password:\n          type: string\n          writeOnly: true\n          minLength: 1\n        new_password:\n          type: string\n          writeOnly: true\n          minLength: 8\n        new_password_confirm:\n          type: string\n          writeOnly: true\n          minLength: 1\n    PatchedCreateMedicalRecordRequest:\n      type: object\n      description: Serializer for creating medical records with documents.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this record belongs to\n        patient:\n          type: string\n          format: uuid\n        created_by:\n          type: string\n          format: uuid\n          nullable: true\n        record_type:\n          $ref: '#/components/schemas/RecordTypeEnum'\n        title:\n          type: string\n          minLength: 1\n          maxLength: 255\n        description:\n          type: string\n          minLength: 1\n        diagnosis:\n          type: string\n        symptoms:\n          type: string\n        vital_signs: {}\n        lab_results: {}\n        attachments: {}\n        appointment:\n          type: string\n          format: uuid\n          nullable: true\n        is_confidential:\n          type: boolean\n        access_restricted:\n          type: boolean\n        metadata: {}\n        documents:\n          type: array\n          items:\n            $ref: '#/components/schemas/MedicalDocumentRequest'\n    PatchedCreateSubscriptionRequest:\n      type: object\n      description: Serializer for creating/updating subscriptions.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this subscription belongs to\n        plan:\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/Status1f0Enum'\n        start_date:\n          type: string\n          format: date-time\n        end_date:\n          type: string\n          format: date-time\n        trial_end_date:\n          type: string\n          format: date-time\n          nullable: true\n        current_period_start:\n          type: string\n          format: date-time\n        current_period_end:\n          type: string\n          format: date-time\n        next_billing_date:\n          type: string\n          format: date-time\n          nullable: true\n        payment_method:\n          type: string\n          maxLength: 50\n        auto_renew:\n          type: boolean\n        metadata: {}\n    PatchedCreateTreatmentRequest:\n      type: object\n      description: Serializer for creating treatments with prescriptions.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this treatment belongs to\n        patient:\n          type: string\n          format: uuid\n        prescribed_by:\n          type: string\n          format: uuid\n          nullable: true\n        treatment_type:\n          $ref: '#/components/schemas/TreatmentTypeEnum'\n        name:\n          type: string\n          minLength: 1\n          maxLength: 255\n        description:\n          type: string\n          minLength: 1\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n          nullable: true\n        status:\n          $ref: '#/components/schemas/StatusA4bEnum'\n        instructions:\n          type: string\n          minLength: 1\n        frequency:\n          type: string\n          maxLength: 100\n        dosage:\n          type: string\n          maxLength: 100\n        duration:\n          type: string\n          maxLength: 100\n        side_effects:\n          type: string\n        warnings:\n          type: string\n        appointment:\n          type: string\n          format: uuid\n          nullable: true\n        medical_record:\n          type: string\n          format: uuid\n          nullable: true\n        metadata: {}\n        prescriptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/PrescriptionRequest'\n    PatchedDoctorAvailabilitySlotRequest:\n      type: object\n      description: Serializer for DoctorAvailabilitySlot model.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          nullable: true\n        doctor:\n          type: string\n          format: uuid\n        start_time:\n          type: string\n          format: date-time\n          description: Slot start date and time\n        end_time:\n          type: string\n          format: date-time\n          description: Slot end date and time\n        slot_duration_minutes:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Duration of each appointment slot in minutes\n        max_appointments:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Maximum number of appointments that can be booked in this slot\n        status:\n          $ref: '#/components/schemas/Status289Enum'\n        is_recurring:\n          type: boolean\n        recurrence_pattern:\n          $ref: '#/components/schemas/RecurrencePatternEnum'\n        recurrence_end_date:\n          type: string\n          format: date\n          nullable: true\n        day_of_week:\n          nullable: true\n          description: |-\n            For weekly recurring slots\n\n            * `0` - Monday\n            * `1` - Tuesday\n            * `2` - Wednesday\n            * `3` - Thursday\n            * `4` - Friday\n            * `5` - Saturday\n            * `6` - Sunday\n          minimum: -9223372036854775808\n          maximum: 9223372036854775807\n          oneOf:\n          - $ref: '#/components/schemas/DayOfWeekEnum'\n          - $ref: '#/components/schemas/NullEnum'\n        allowed_appointment_types:\n          description: List of appointment types allowed in this slot\n        notes:\n          type: string\n        advance_booking_days:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: How many days in advance this slot can be booked\n        minimum_notice_hours:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          description: Minimum hours notice required for booking\n        created_at:\n          type: string\n          format: date-time\n    PatchedDoctorSpecialtyRequest:\n      type: object\n      description: Serializer for DoctorSpecialty relationship\n      properties:\n        doctor:\n          type: string\n          format: uuid\n        specialty:\n          type: integer\n        is_primary:\n          type: boolean\n          description: Is this the doctor's primary specialization?\n        certification_date:\n          type: string\n          format: date\n          nullable: true\n        certification_number:\n          type: string\n          nullable: true\n          maxLength: 100\n        institution:\n          type: string\n          nullable: true\n          description: Institution where specialization was obtained\n          maxLength: 200\n        years_of_experience:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n    PatchedEmailRequestDetailRequest:\n      type: object\n      description: Serializer for viewing email request details.\n      properties:\n        full_name:\n          type: string\n          maxLength: 50\n        email:\n          type: string\n          format: email\n          minLength: 1\n          maxLength: 254\n        phone:\n          type: string\n          maxLength: 20\n        job_profession:\n          type: string\n          maxLength: 200\n        subject:\n          type: string\n          minLength: 1\n          maxLength: 200\n        message:\n          type: string\n        file_attached:\n          type: string\n          format: binary\n          nullable: true\n          description: Optional file attachment\n    PatchedHospitalUpdateRequest:\n      type: object\n      description: Serializer for updating hospitals.\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 200\n        hospital_type:\n          $ref: '#/components/schemas/HospitalTypeEnum'\n        description:\n          type: string\n        phone_number:\n          type: string\n          maxLength: 20\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        website:\n          type: string\n          format: uri\n          maxLength: 200\n        address_line1:\n          type: string\n          minLength: 1\n          maxLength: 255\n        address_line2:\n          type: string\n          maxLength: 255\n        city:\n          type: string\n          minLength: 1\n          maxLength: 100\n        state:\n          type: string\n          minLength: 1\n          maxLength: 100\n        country:\n          type: string\n          minLength: 1\n          maxLength: 100\n        postal_code:\n          type: string\n          minLength: 1\n          maxLength: 20\n        latitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        longitude:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,6})?$\n          nullable: true\n        bed_count:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n          nullable: true\n        emergency_services:\n          type: boolean\n        trauma_center_level:\n          type: string\n          maxLength: 10\n        operating_hours: {}\n        services: {}\n        accreditations: {}\n        license_number:\n          type: string\n          maxLength: 100\n        is_active:\n          type: boolean\n        is_verified:\n          type: boolean\n    PatchedMedicalDocumentRequest:\n      type: object\n      description: Serializer for MedicalDocument model.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this document belongs to\n        medical_record:\n          type: string\n          format: uuid\n        document_type:\n          $ref: '#/components/schemas/DocumentTypeEnum'\n        title:\n          type: string\n          minLength: 1\n          maxLength: 255\n        description:\n          type: string\n        file:\n          type: string\n          format: binary\n        uploaded_by:\n          type: string\n          format: uuid\n          nullable: true\n    PatchedPrescriptionRequest:\n      type: object\n      description: Serializer for Prescription model.\n      properties:\n        treatment:\n          type: string\n          format: uuid\n        medication_name:\n          type: string\n          minLength: 1\n          maxLength: 255\n        generic_name:\n          type: string\n          maxLength: 255\n        brand_name:\n          type: string\n          maxLength: 255\n        dosage:\n          type: string\n          minLength: 1\n          maxLength: 100\n        dosage_unit:\n          type: string\n          minLength: 1\n          maxLength: 50\n        frequency:\n          type: string\n          minLength: 1\n          maxLength: 100\n        route:\n          type: string\n          minLength: 1\n          maxLength: 50\n        duration_days:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        quantity_prescribed:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        quantity_unit:\n          type: string\n          minLength: 1\n          maxLength: 50\n        refills_allowed:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        refills_used:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        instructions:\n          type: string\n          minLength: 1\n        take_with_food:\n          type: boolean\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n        pharmacy_name:\n          type: string\n          maxLength: 255\n        pharmacy_phone:\n          type: string\n          maxLength: 20\n        is_active:\n          type: boolean\n        is_dispensed:\n          type: boolean\n        dispensed_date:\n          type: string\n          format: date-time\n          nullable: true\n    PatchedSpecialtyRequest:\n      type: object\n      description: Serializer for Specialty model\n      properties:\n        code:\n          $ref: '#/components/schemas/CodeEnum'\n        name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        description:\n          type: string\n          nullable: true\n        certification_required:\n          type: boolean\n        years_of_training:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        is_active:\n          type: boolean\n    PatchedSubscriptionPlanRequest:\n      type: object\n      description: Serializer for SubscriptionPlan model.\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        slug:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        plan_type:\n          $ref: '#/components/schemas/PlanTypeEnum'\n        description:\n          type: string\n          minLength: 1\n        price:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,8}(?:\\.\\d{0,2})?$\n        currency:\n          type: string\n          minLength: 1\n          maxLength: 3\n        billing_cycle:\n          $ref: '#/components/schemas/BillingCycleEnum'\n        trial_days:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_users:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_doctors:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_patients:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_appointments_per_month:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        storage_gb:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        has_telemedicine:\n          type: boolean\n        has_analytics:\n          type: boolean\n        has_api_access:\n          type: boolean\n        has_custom_branding:\n          type: boolean\n        has_priority_support:\n          type: boolean\n        has_data_export:\n          type: boolean\n        has_multi_location:\n          type: boolean\n        has_advanced_reporting:\n          type: boolean\n        features: {}\n        is_active:\n          type: boolean\n        is_featured:\n          type: boolean\n        display_order:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        metadata: {}\n    PatchedUserRequest:\n      type: object\n      description: Serializer for User model with hospital details and doctor specialization.\n      properties:\n        email:\n          type: string\n          format: email\n          minLength: 1\n          maxLength: 254\n        username:\n          type: string\n          nullable: true\n          maxLength: 150\n        first_name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        last_name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        phone_number:\n          type: string\n          maxLength: 20\n        date_of_birth:\n          type: string\n          format: date\n          nullable: true\n        gender:\n          oneOf:\n          - $ref: '#/components/schemas/GenderEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n        role:\n          $ref: '#/components/schemas/RoleEnum'\n        hospital:\n          type: string\n          format: uuid\n          nullable: true\n        department:\n          type: string\n          maxLength: 200\n        specialization:\n          type: string\n          maxLength: 200\n        is_active:\n          type: boolean\n        is_verified:\n          type: boolean\n        profile_picture:\n          type: string\n          format: binary\n          nullable: true\n        bio:\n          type: string\n        preferred_language:\n          type: string\n          minLength: 1\n          maxLength: 10\n        timezone:\n          type: string\n          minLength: 1\n          maxLength: 50\n    Patient:\n      type: object\n      description: Serializer for patient users.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        username:\n          type: string\n          nullable: true\n          maxLength: 150\n        first_name:\n          type: string\n          maxLength: 100\n        last_name:\n          type: string\n          maxLength: 100\n        full_name:\n          type: string\n          readOnly: true\n        phone_number:\n          type: string\n          maxLength: 20\n        date_of_birth:\n          type: string\n          format: date\n          nullable: true\n        gender:\n          oneOf:\n          - $ref: '#/components/schemas/GenderEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n        role:\n          $ref: '#/components/schemas/RoleEnum'\n        hospital:\n          type: string\n          format: uuid\n          nullable: true\n        hospital_name:\n          type: string\n          readOnly: true\n        department:\n          type: string\n          maxLength: 200\n        specialization:\n          type: string\n          maxLength: 200\n        is_active:\n          type: boolean\n        is_verified:\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        profile_picture:\n          type: string\n          format: uri\n          nullable: true\n        bio:\n          type: string\n        preferred_language:\n          type: string\n          maxLength: 10\n        timezone:\n          type: string\n          maxLength: 50\n        doctor_specialties:\n          type: string\n          readOnly: true\n        primary_specialty:\n          type: string\n          readOnly: true\n        blood_type:\n          type: string\n          maxLength: 10\n        allergies:\n          type: string\n        medical_conditions:\n          type: string\n        current_medications:\n          type: string\n        emergency_contact_name:\n          type: string\n          maxLength: 200\n        emergency_contact_phone:\n          type: string\n          maxLength: 20\n        emergency_contact_relationship:\n          type: string\n          maxLength: 100\n      required:\n      - created_at\n      - doctor_specialties\n      - email\n      - first_name\n      - full_name\n      - hospital_name\n      - id\n      - last_name\n      - primary_specialty\n      - updated_at\n    PlanTypeEnum:\n      enum:\n      - FREE\n      - BASIC\n      - PROFESSIONAL\n      - ENTERPRISE\n      - CUSTOM\n      type: string\n      description: |-\n        * `FREE` - Free\n        * `BASIC` - Basic\n        * `PROFESSIONAL` - Professional\n        * `ENTERPRISE` - Enterprise\n        * `CUSTOM` - Custom\n    Prescription:\n      type: object\n      description: Serializer for Prescription model.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        treatment:\n          type: string\n          format: uuid\n        medication_name:\n          type: string\n          maxLength: 255\n        generic_name:\n          type: string\n          maxLength: 255\n        brand_name:\n          type: string\n          maxLength: 255\n        dosage:\n          type: string\n          maxLength: 100\n        dosage_unit:\n          type: string\n          maxLength: 50\n        frequency:\n          type: string\n          maxLength: 100\n        route:\n          type: string\n          maxLength: 50\n        duration_days:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        quantity_prescribed:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        quantity_unit:\n          type: string\n          maxLength: 50\n        refills_allowed:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        refills_used:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        instructions:\n          type: string\n        take_with_food:\n          type: boolean\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n        pharmacy_name:\n          type: string\n          maxLength: 255\n        pharmacy_phone:\n          type: string\n          maxLength: 20\n        is_active:\n          type: boolean\n        is_dispensed:\n          type: boolean\n        dispensed_date:\n          type: string\n          format: date-time\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - created_at\n      - dosage\n      - dosage_unit\n      - duration_days\n      - end_date\n      - frequency\n      - id\n      - instructions\n      - medication_name\n      - quantity_prescribed\n      - quantity_unit\n      - route\n      - start_date\n      - treatment\n      - updated_at\n    PrescriptionRequest:\n      type: object\n      description: Serializer for Prescription model.\n      properties:\n        treatment:\n          type: string\n          format: uuid\n        medication_name:\n          type: string\n          minLength: 1\n          maxLength: 255\n        generic_name:\n          type: string\n          maxLength: 255\n        brand_name:\n          type: string\n          maxLength: 255\n        dosage:\n          type: string\n          minLength: 1\n          maxLength: 100\n        dosage_unit:\n          type: string\n          minLength: 1\n          maxLength: 50\n        frequency:\n          type: string\n          minLength: 1\n          maxLength: 100\n        route:\n          type: string\n          minLength: 1\n          maxLength: 50\n        duration_days:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        quantity_prescribed:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        quantity_unit:\n          type: string\n          minLength: 1\n          maxLength: 50\n        refills_allowed:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        refills_used:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        instructions:\n          type: string\n          minLength: 1\n        take_with_food:\n          type: boolean\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n        pharmacy_name:\n          type: string\n          maxLength: 255\n        pharmacy_phone:\n          type: string\n          maxLength: 20\n        is_active:\n          type: boolean\n        is_dispensed:\n          type: boolean\n        dispensed_date:\n          type: string\n          format: date-time\n          nullable: true\n      required:\n      - dosage\n      - dosage_unit\n      - duration_days\n      - end_date\n      - frequency\n      - instructions\n      - medication_name\n      - quantity_prescribed\n      - quantity_unit\n      - route\n      - start_date\n      - treatment\n    RecordTypeEnum:\n      enum:\n      - GENERAL\n      - LAB_RESULT\n      - IMAGING\n      - PRESCRIPTION\n      - VACCINATION\n      - SURGERY\n      - DISCHARGE\n      - ALLERGY\n      - DIAGNOSIS\n      type: string\n      description: |-\n        * `GENERAL` - General Record\n        * `LAB_RESULT` - Lab Result\n        * `IMAGING` - Imaging/X-Ray\n        * `PRESCRIPTION` - Prescription\n        * `VACCINATION` - Vaccination Record\n        * `SURGERY` - Surgery Report\n        * `DISCHARGE` - Discharge Summary\n        * `ALLERGY` - Allergy Record\n        * `DIAGNOSIS` - Diagnosis\n    RecurrencePatternEnum:\n      enum:\n      - NONE\n      - DAILY\n      - WEEKLY\n      - MONTHLY\n      type: string\n      description: |-\n        * `NONE` - No Recurrence\n        * `DAILY` - Daily\n        * `WEEKLY` - Weekly\n        * `MONTHLY` - Monthly\n    RoleEnum:\n      enum:\n      - SUPERADMIN\n      - ADMIN\n      - DOCTOR\n      - NURSE\n      - PATIENT\n      - STAFF\n      type: string\n      description: |-\n        * `SUPERADMIN` - Super Admin\n        * `ADMIN` - Hospital Admin\n        * `DOCTOR` - Doctor\n        * `NURSE` - Nurse\n        * `PATIENT` - Patient\n        * `STAFF` - Staff\n    Specialty:\n      type: object\n      description: Serializer for Specialty model\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        code:\n          $ref: '#/components/schemas/CodeEnum'\n        name:\n          type: string\n          maxLength: 100\n        description:\n          type: string\n          nullable: true\n        certification_required:\n          type: boolean\n        years_of_training:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        is_active:\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        total_doctors:\n          type: string\n          readOnly: true\n        statistics:\n          type: string\n          readOnly: true\n      required:\n      - code\n      - created_at\n      - id\n      - name\n      - statistics\n      - total_doctors\n      - updated_at\n    SpecialtyList:\n      type: object\n      description: Lightweight serializer for listing specialties\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        code:\n          $ref: '#/components/schemas/CodeEnum'\n        name:\n          type: string\n          maxLength: 100\n        doctor_count:\n          type: integer\n          readOnly: true\n        is_active:\n          type: boolean\n      required:\n      - code\n      - doctor_count\n      - id\n      - name\n    SpecialtyRequest:\n      type: object\n      description: Serializer for Specialty model\n      properties:\n        code:\n          $ref: '#/components/schemas/CodeEnum'\n        name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        description:\n          type: string\n          nullable: true\n        certification_required:\n          type: boolean\n        years_of_training:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        is_active:\n          type: boolean\n      required:\n      - code\n      - name\n    SpecialtyStatistics:\n      type: object\n      description: Serializer for specialty statistics\n      properties:\n        id:\n          type: integer\n          readOnly: true\n        specialty:\n          type: integer\n        specialty_name:\n          type: string\n          readOnly: true\n        specialty_code:\n          type: string\n          readOnly: true\n        total_doctors:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        total_appointments:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        average_rating:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,1}(?:\\.\\d{0,2})?$\n        appointment_requests_last_month:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        average_wait_days:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,3}(?:\\.\\d{0,2})?$\n        last_updated:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - id\n      - last_updated\n      - specialty\n      - specialty_code\n      - specialty_name\n    Status1f0Enum:\n      enum:\n      - TRIAL\n      - ACTIVE\n      - PAST_DUE\n      - CANCELLED\n      - EXPIRED\n      - SUSPENDED\n      type: string\n      description: |-\n        * `TRIAL` - Trial\n        * `ACTIVE` - Active\n        * `PAST_DUE` - Past Due\n        * `CANCELLED` - Cancelled\n        * `EXPIRED` - Expired\n        * `SUSPENDED` - Suspended\n    Status289Enum:\n      enum:\n      - AVAILABLE\n      - BOOKED\n      - BLOCKED\n      - BREAK\n      - UNAVAILABLE\n      type: string\n      description: |-\n        * `AVAILABLE` - Available\n        * `BOOKED` - Booked\n        * `BLOCKED` - Blocked\n        * `BREAK` - Break\n        * `UNAVAILABLE` - Unavailable\n    Status911Enum:\n      enum:\n      - PENDING\n      - PROCESSING\n      - SENT\n      - FAILED\n      - CANCELLED\n      type: string\n      description: |-\n        * `PENDING` - Pending\n        * `PROCESSING` - Processing\n        * `SENT` - Sent\n        * `FAILED` - Failed\n        * `CANCELLED` - Cancelled\n    StatusA1cEnum:\n      enum:\n      - SCHEDULED\n      - IN_PROGRESS\n      - COMPLETED\n      - CANCELLED\n      - NO_SHOW\n      - RESCHEDULED\n      type: string\n      description: |-\n        * `SCHEDULED` - Scheduled\n        * `IN_PROGRESS` - In Progress\n        * `COMPLETED` - Completed\n        * `CANCELLED` - Cancelled\n        * `NO_SHOW` - No Show\n        * `RESCHEDULED` - Rescheduled\n    StatusA4bEnum:\n      enum:\n      - PLANNED\n      - IN_PROGRESS\n      - COMPLETED\n      - CANCELLED\n      - ON_HOLD\n      type: string\n      description: |-\n        * `PLANNED` - Planned\n        * `IN_PROGRESS` - In Progress\n        * `COMPLETED` - Completed\n        * `CANCELLED` - Cancelled\n        * `ON_HOLD` - On Hold\n    Subscription:\n      type: object\n      description: Serializer for Subscription model.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        hospital:\n          type: string\n          format: uuid\n          readOnly: true\n          description: Hospital this subscription belongs to\n        hospital_name:\n          type: string\n          readOnly: true\n        plan:\n          type: string\n          format: uuid\n        plan_name:\n          type: string\n          readOnly: true\n        plan_details:\n          allOf:\n          - $ref: '#/components/schemas/SubscriptionPlan'\n          readOnly: true\n        status:\n          $ref: '#/components/schemas/Status1f0Enum'\n        start_date:\n          type: string\n          format: date-time\n        end_date:\n          type: string\n          format: date-time\n        trial_end_date:\n          type: string\n          format: date-time\n          nullable: true\n        cancelled_at:\n          type: string\n          format: date-time\n          nullable: true\n        current_period_start:\n          type: string\n          format: date-time\n        current_period_end:\n          type: string\n          format: date-time\n        next_billing_date:\n          type: string\n          format: date-time\n          nullable: true\n        payment_method:\n          type: string\n          maxLength: 50\n        last_payment_date:\n          type: string\n          format: date-time\n          nullable: true\n        last_payment_amount:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,8}(?:\\.\\d{0,2})?$\n          nullable: true\n        current_users:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        current_doctors:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        current_patients:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        current_appointments_this_month:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        current_storage_gb:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,8}(?:\\.\\d{0,2})?$\n        auto_renew:\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        metadata: {}\n        days_until_renewal:\n          type: string\n          readOnly: true\n        is_in_trial:\n          type: string\n          readOnly: true\n        usage_percentage:\n          type: string\n          readOnly: true\n      required:\n      - created_at\n      - current_period_end\n      - current_period_start\n      - days_until_renewal\n      - end_date\n      - hospital\n      - hospital_name\n      - id\n      - is_in_trial\n      - plan\n      - plan_details\n      - plan_name\n      - start_date\n      - updated_at\n      - usage_percentage\n    SubscriptionPlan:\n      type: object\n      description: Serializer for SubscriptionPlan model.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          maxLength: 100\n        slug:\n          type: string\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        plan_type:\n          $ref: '#/components/schemas/PlanTypeEnum'\n        description:\n          type: string\n        price:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,8}(?:\\.\\d{0,2})?$\n        currency:\n          type: string\n          maxLength: 3\n        billing_cycle:\n          $ref: '#/components/schemas/BillingCycleEnum'\n        trial_days:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_users:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_doctors:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_patients:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_appointments_per_month:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        storage_gb:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        has_telemedicine:\n          type: boolean\n        has_analytics:\n          type: boolean\n        has_api_access:\n          type: boolean\n        has_custom_branding:\n          type: boolean\n        has_priority_support:\n          type: boolean\n        has_data_export:\n          type: boolean\n        has_multi_location:\n          type: boolean\n        has_advanced_reporting:\n          type: boolean\n        features: {}\n        is_active:\n          type: boolean\n        is_featured:\n          type: boolean\n        display_order:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        metadata: {}\n        monthly_price:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,8}(?:\\.\\d{0,2})?$\n          readOnly: true\n      required:\n      - created_at\n      - description\n      - id\n      - max_appointments_per_month\n      - max_doctors\n      - max_patients\n      - max_users\n      - monthly_price\n      - name\n      - plan_type\n      - price\n      - slug\n      - storage_gb\n      - updated_at\n    SubscriptionPlanList:\n      type: object\n      description: Lightweight serializer for plan listings.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        slug:\n          type: string\n          readOnly: true\n          pattern: ^[-a-zA-Z0-9_]+$\n        plan_type:\n          allOf:\n          - $ref: '#/components/schemas/PlanTypeEnum'\n          readOnly: true\n        price:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,8}(?:\\.\\d{0,2})?$\n          readOnly: true\n        currency:\n          type: string\n          readOnly: true\n        billing_cycle:\n          allOf:\n          - $ref: '#/components/schemas/BillingCycleEnum'\n          readOnly: true\n        monthly_price:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,8}(?:\\.\\d{0,2})?$\n          readOnly: true\n        is_featured:\n          type: boolean\n          readOnly: true\n        features:\n          readOnly: true\n      required:\n      - billing_cycle\n      - currency\n      - features\n      - id\n      - is_featured\n      - monthly_price\n      - name\n      - plan_type\n      - price\n      - slug\n    SubscriptionPlanRequest:\n      type: object\n      description: Serializer for SubscriptionPlan model.\n      properties:\n        name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        slug:\n          type: string\n          minLength: 1\n          maxLength: 100\n          pattern: ^[-a-zA-Z0-9_]+$\n        plan_type:\n          $ref: '#/components/schemas/PlanTypeEnum'\n        description:\n          type: string\n          minLength: 1\n        price:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,8}(?:\\.\\d{0,2})?$\n        currency:\n          type: string\n          minLength: 1\n          maxLength: 3\n        billing_cycle:\n          $ref: '#/components/schemas/BillingCycleEnum'\n        trial_days:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_users:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_doctors:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_patients:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        max_appointments_per_month:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        storage_gb:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        has_telemedicine:\n          type: boolean\n        has_analytics:\n          type: boolean\n        has_api_access:\n          type: boolean\n        has_custom_branding:\n          type: boolean\n        has_priority_support:\n          type: boolean\n        has_data_export:\n          type: boolean\n        has_multi_location:\n          type: boolean\n        has_advanced_reporting:\n          type: boolean\n        features: {}\n        is_active:\n          type: boolean\n        is_featured:\n          type: boolean\n        display_order:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        metadata: {}\n      required:\n      - description\n      - max_appointments_per_month\n      - max_doctors\n      - max_patients\n      - max_users\n      - name\n      - plan_type\n      - price\n      - slug\n      - storage_gb\n    SubscriptionRequest:\n      type: object\n      description: Serializer for Subscription model.\n      properties:\n        plan:\n          type: string\n          format: uuid\n        status:\n          $ref: '#/components/schemas/Status1f0Enum'\n        start_date:\n          type: string\n          format: date-time\n        end_date:\n          type: string\n          format: date-time\n        trial_end_date:\n          type: string\n          format: date-time\n          nullable: true\n        cancelled_at:\n          type: string\n          format: date-time\n          nullable: true\n        current_period_start:\n          type: string\n          format: date-time\n        current_period_end:\n          type: string\n          format: date-time\n        next_billing_date:\n          type: string\n          format: date-time\n          nullable: true\n        payment_method:\n          type: string\n          maxLength: 50\n        last_payment_date:\n          type: string\n          format: date-time\n          nullable: true\n        last_payment_amount:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,8}(?:\\.\\d{0,2})?$\n          nullable: true\n        current_users:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        current_doctors:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        current_patients:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        current_appointments_this_month:\n          type: integer\n          maximum: 9223372036854775807\n          minimum: -9223372036854775808\n          format: int64\n        current_storage_gb:\n          type: string\n          format: decimal\n          pattern: ^-?\\d{0,8}(?:\\.\\d{0,2})?$\n        auto_renew:\n          type: boolean\n        metadata: {}\n      required:\n      - current_period_end\n      - current_period_start\n      - end_date\n      - plan\n      - start_date\n    TokenRefresh:\n      type: object\n      properties:\n        access:\n          type: string\n          readOnly: true\n        refresh:\n          type: string\n      required:\n      - access\n      - refresh\n    TokenRefreshRequest:\n      type: object\n      properties:\n        refresh:\n          type: string\n          minLength: 1\n      required:\n      - refresh\n    Treatment:\n      type: object\n      description: Serializer for Treatment model.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this treatment belongs to\n        patient:\n          type: string\n          format: uuid\n        patient_name:\n          type: string\n          readOnly: true\n        prescribed_by:\n          type: string\n          format: uuid\n          nullable: true\n        prescribed_by_name:\n          type: string\n          readOnly: true\n        treatment_type:\n          $ref: '#/components/schemas/TreatmentTypeEnum'\n        name:\n          type: string\n          maxLength: 255\n        description:\n          type: string\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n          nullable: true\n        status:\n          $ref: '#/components/schemas/StatusA4bEnum'\n        instructions:\n          type: string\n        frequency:\n          type: string\n          maxLength: 100\n        dosage:\n          type: string\n          maxLength: 100\n        duration:\n          type: string\n          maxLength: 100\n        side_effects:\n          type: string\n        warnings:\n          type: string\n        appointment:\n          type: string\n          format: uuid\n          nullable: true\n        medical_record:\n          type: string\n          format: uuid\n          nullable: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        completed_at:\n          type: string\n          format: date-time\n          nullable: true\n        metadata: {}\n        prescriptions:\n          type: array\n          items:\n            $ref: '#/components/schemas/Prescription'\n          readOnly: true\n      required:\n      - created_at\n      - description\n      - hospital\n      - id\n      - instructions\n      - name\n      - patient\n      - patient_name\n      - prescribed_by_name\n      - prescriptions\n      - start_date\n      - treatment_type\n      - updated_at\n    TreatmentList:\n      type: object\n      description: Lightweight serializer for treatment listings.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        patient_name:\n          type: string\n          readOnly: true\n        prescribed_by_name:\n          type: string\n          readOnly: true\n        treatment_type:\n          allOf:\n          - $ref: '#/components/schemas/TreatmentTypeEnum'\n          readOnly: true\n        name:\n          type: string\n          readOnly: true\n        start_date:\n          type: string\n          format: date\n          readOnly: true\n        status:\n          allOf:\n          - $ref: '#/components/schemas/StatusA4bEnum'\n          readOnly: true\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n      required:\n      - created_at\n      - id\n      - name\n      - patient_name\n      - prescribed_by_name\n      - start_date\n      - status\n      - treatment_type\n    TreatmentRequest:\n      type: object\n      description: Serializer for Treatment model.\n      properties:\n        hospital:\n          type: string\n          format: uuid\n          description: Hospital this treatment belongs to\n        patient:\n          type: string\n          format: uuid\n        prescribed_by:\n          type: string\n          format: uuid\n          nullable: true\n        treatment_type:\n          $ref: '#/components/schemas/TreatmentTypeEnum'\n        name:\n          type: string\n          minLength: 1\n          maxLength: 255\n        description:\n          type: string\n          minLength: 1\n        start_date:\n          type: string\n          format: date\n        end_date:\n          type: string\n          format: date\n          nullable: true\n        status:\n          $ref: '#/components/schemas/StatusA4bEnum'\n        instructions:\n          type: string\n          minLength: 1\n        frequency:\n          type: string\n          maxLength: 100\n        dosage:\n          type: string\n          maxLength: 100\n        duration:\n          type: string\n          maxLength: 100\n        side_effects:\n          type: string\n        warnings:\n          type: string\n        appointment:\n          type: string\n          format: uuid\n          nullable: true\n        medical_record:\n          type: string\n          format: uuid\n          nullable: true\n        completed_at:\n          type: string\n          format: date-time\n          nullable: true\n        metadata: {}\n      required:\n      - description\n      - hospital\n      - instructions\n      - name\n      - patient\n      - start_date\n      - treatment_type\n    TreatmentTypeEnum:\n      enum:\n      - MEDICATION\n      - THERAPY\n      - SURGERY\n      - PROCEDURE\n      - REHABILITATION\n      - COUNSELING\n      - DIET_PLAN\n      - EXERCISE\n      type: string\n      description: |-\n        * `MEDICATION` - Medication\n        * `THERAPY` - Therapy\n        * `SURGERY` - Surgery\n        * `PROCEDURE` - Procedure\n        * `REHABILITATION` - Rehabilitation\n        * `COUNSELING` - Counseling\n        * `DIET_PLAN` - Diet Plan\n        * `EXERCISE` - Exercise Program\n    User:\n      type: object\n      description: Serializer for User model with hospital details and doctor specialization.\n      properties:\n        id:\n          type: string\n          format: uuid\n          readOnly: true\n        email:\n          type: string\n          format: email\n          maxLength: 254\n        username:\n          type: string\n          nullable: true\n          maxLength: 150\n        first_name:\n          type: string\n          maxLength: 100\n        last_name:\n          type: string\n          maxLength: 100\n        full_name:\n          type: string\n          readOnly: true\n        phone_number:\n          type: string\n          maxLength: 20\n        date_of_birth:\n          type: string\n          format: date\n          nullable: true\n        gender:\n          oneOf:\n          - $ref: '#/components/schemas/GenderEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n        role:\n          $ref: '#/components/schemas/RoleEnum'\n        hospital:\n          type: string\n          format: uuid\n          nullable: true\n        hospital_name:\n          type: string\n          readOnly: true\n        department:\n          type: string\n          maxLength: 200\n        specialization:\n          type: string\n          maxLength: 200\n        is_active:\n          type: boolean\n        is_verified:\n          type: boolean\n        created_at:\n          type: string\n          format: date-time\n          readOnly: true\n        updated_at:\n          type: string\n          format: date-time\n          readOnly: true\n        profile_picture:\n          type: string\n          format: uri\n          nullable: true\n        bio:\n          type: string\n        preferred_language:\n          type: string\n          maxLength: 10\n        timezone:\n          type: string\n          maxLength: 50\n        doctor_specialties:\n          type: string\n          readOnly: true\n        primary_specialty:\n          type: string\n          readOnly: true\n      required:\n      - created_at\n      - doctor_specialties\n      - email\n      - first_name\n      - full_name\n      - hospital_name\n      - id\n      - last_name\n      - primary_specialty\n      - updated_at\n    UserCreateRequest:\n      type: object\n      description: Serializer for creating new users.\n      properties:\n        email:\n          type: string\n          format: email\n          minLength: 1\n          maxLength: 254\n        username:\n          type: string\n          nullable: true\n          maxLength: 150\n        password:\n          type: string\n          writeOnly: true\n          minLength: 8\n        password_confirm:\n          type: string\n          writeOnly: true\n          minLength: 1\n        first_name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        last_name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        phone_number:\n          type: string\n          maxLength: 20\n        role:\n          $ref: '#/components/schemas/RoleEnum'\n        hospital:\n          type: string\n          format: uuid\n          nullable: true\n        department:\n          type: string\n          maxLength: 200\n        specialization:\n          type: string\n          maxLength: 200\n      required:\n      - email\n      - first_name\n      - last_name\n      - password\n      - password_confirm\n    UserRequest:\n      type: object\n      description: Serializer for User model with hospital details and doctor specialization.\n      properties:\n        email:\n          type: string\n          format: email\n          minLength: 1\n          maxLength: 254\n        username:\n          type: string\n          nullable: true\n          maxLength: 150\n        first_name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        last_name:\n          type: string\n          minLength: 1\n          maxLength: 100\n        phone_number:\n          type: string\n          maxLength: 20\n        date_of_birth:\n          type: string\n          format: date\n          nullable: true\n        gender:\n          oneOf:\n          - $ref: '#/components/schemas/GenderEnum'\n          - $ref: '#/components/schemas/BlankEnum'\n        role:\n          $ref: '#/components/schemas/RoleEnum'\n        hospital:\n          type: string\n          format: uuid\n          nullable: true\n        department:\n          type: string\n          maxLength: 200\n        specialization:\n          type: string\n          maxLength: 200\n        is_active:\n          type: boolean\n        is_verified:\n          type: boolean\n        profile_picture:\n          type: string\n          format: binary\n          nullable: true\n        bio:\n          type: string\n        preferred_language:\n          type: string\n          minLength: 1\n          maxLength: 10\n        timezone:\n          type: string\n          minLength: 1\n          maxLength: 50\n      required:\n      - email\n      - first_name\n      - last_name\n  securitySchemes:\n    jwtAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\ntags:\n- name: Authentication\n  description: User authentication and registration\n- name: Hospitals\n  description: Hospital/Tenant management\n- name: Users\n  description: User management and profiles\n- name: Appointments\n  description: Appointment scheduling and management\n- name: Medical Records\n  description: Patient medical records\n- name: Treatments\n  description: Treatment plans and prescriptions\n- name: Specialties\n  description: Doctor specializations\n- name: Subscriptions\n  description: Hospital subscription plans\n- name: Chat & Voice\n  description: AI chat and voice interactions\nexternalDocs:\n  description: MedCor Platform Documentation\n  url: https://api.medcor.ai/docs\n",
    "headers": {
      "server": "nginx/1.18.0 (Ubuntu)",
      "date": "Thu, 04 Sep 2025 07:38:55 GMT",
      "content-type": "application/vnd.oai.openapi; charset=utf-8",
      "content-length": "265565",
      "connection": "keep-alive",
      "content-disposition": "inline; filename=\"MedCor Healthcare Platform API.yaml\"",
      "vary": "Accept, origin",
      "allow": "GET, HEAD, OPTIONS",
      "x-frame-options": "DENY",
      "x-content-type-options": "nosniff",
      "referrer-policy": "same-origin",
      "cross-origin-opener-policy": "same-origin"
    }
  },
  "docs": {
    "status": 200,
    "body": "<!DOCTYPE html>\n<html>\n  <head>\n    \n    <title>MedCor Healthcare Platform API</title>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <link rel=\"icon\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@latest/favicon-32x32.png\">\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@latest/swagger-ui.css\">\n    <style>\n      html { box-sizing: border-box; overflow-y: scroll; }\n      *, *:after, *:before { box-sizing: inherit; }\n      body { background: #fafafa; margin: 0; }\n    </style>\n    \n  </head>\n  <body>\n    \n    <div id=\"swagger-ui\"></div>\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@latest/swagger-ui-bundle.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/swagger-ui-dist@latest/swagger-ui-standalone-preset.js\"></script>\n    \n    <script>\n    \"use strict\";\n\nconst swaggerSettings = {\n  \"deepLinking\": true,\n  \"persistAuthorization\": true,\n  \"displayOperationId\": false,\n  \"filter\": true,\n  \"tryItOutEnabled\": true\n};\nconst schemaAuthNames = [];\nlet schemaAuthFailed = false;\nconst plugins = [];\n\nconst reloadSchemaOnAuthChange = () => {\n  return {\n    statePlugins: {\n      auth: {\n        wrapActions: {\n          authorize: (ori) => (...args) => {\n            schemaAuthFailed = false;\n            setTimeout(() => ui.specActions.download());\n            return ori(...args);\n          },\n          logout: (ori) => (...args) => {\n            schemaAuthFailed = false;\n            setTimeout(() => ui.specActions.download());\n            return ori(...args);\n          },\n        },\n      },\n    },\n  };\n};\n\nif (schemaAuthNames.length > 0) {\n  plugins.push(reloadSchemaOnAuthChange);\n}\n\nconst uiInitialized = () => {\n  try {\n    ui;\n    return true;\n  } catch {\n    return false;\n  }\n};\n\nconst isSchemaUrl = (url) => {\n  if (!uiInitialized()) {\n    return false;\n  }\n  return url === new URL(ui.getConfigs().url, document.baseURI).href;\n};\n\nconst responseInterceptor = (response, ...args) => {\n  if (!response.ok && isSchemaUrl(response.url)) {\n    console.warn(\"schema request received '\" + response.status + \"'. disabling credentials for schema till logout.\");\n    if (!schemaAuthFailed) {\n      // only retry once to prevent endless loop.\n      schemaAuthFailed = true;\n      setTimeout(() => ui.specActions.download());\n    }\n  }\n  return response;\n};\n\nconst injectAuthCredentials = (request) => {\n  let authorized;\n  if (uiInitialized()) {\n    const state = ui.getState().get(\"auth\").get(\"authorized\");\n    if (state !== undefined && Object.keys(state.toJS()).length !== 0) {\n      authorized = state.toJS();\n    }\n  } else if (![undefined, \"{}\"].includes(localStorage.authorized)) {\n    authorized = JSON.parse(localStorage.authorized);\n  }\n  if (authorized === undefined) {\n    return;\n  }\n  for (const authName of schemaAuthNames) {\n    const authDef = authorized[authName];\n    if (authDef === undefined || authDef.schema === undefined) {\n      continue;\n    }\n    if (authDef.schema.type === \"http\" && authDef.schema.scheme === \"bearer\") {\n      request.headers[\"Authorization\"] = \"Bearer \" + authDef.value;\n      return;\n    } else if (authDef.schema.type === \"http\" && authDef.schema.scheme === \"basic\") {\n      request.headers[\"Authorization\"] = \"Basic \" + btoa(authDef.value.username + \":\" + authDef.value.password);\n      return;\n    } else if (authDef.schema.type === \"apiKey\" && authDef.schema.in === \"header\") {\n      request.headers[authDef.schema.name] = authDef.value;\n      return;\n    } else if (authDef.schema.type === \"oauth2\" && authDef.token.token_type === \"Bearer\") {\n      request.headers[\"Authorization\"] = `Bearer ${authDef.token.access_token}`;\n      return;\n    }\n  }\n};\n\nconst requestInterceptor = (request, ...args) => {\n  if (request.loadSpec && schemaAuthNames.length > 0 && !schemaAuthFailed) {\n    try {\n      injectAuthCredentials(request);\n    } catch (e) {\n      console.error(\"schema auth injection failed with error: \", e);\n    }\n  }\n  // selectively omit adding headers to mitigate CORS issues.\n  if (![\"GET\", undefined].includes(request.method) && request.credentials === \"same-origin\") {\n    request.headers[\"X-CSRFTOKEN\"] = \"n7gK5fpu4HunfoBMTAYCzWW0ynax8Fazi9Ls28ItpCOYjzj0e1zuRIZxWfA62vae\";\n  }\n  return request;\n};\n\nconst ui = SwaggerUIBundle({\n  url: \"/api/schema/\",\n  dom_id: \"#swagger-ui\",\n  presets: [SwaggerUIBundle.presets.apis],\n  plugins,\n  layout: \"BaseLayout\",\n  requestInterceptor,\n  responseInterceptor,\n  ...swaggerSettings,\n});\n\nui.initOAuth({});\n\n    </script>\n    \n    \n  </body>\n</html>\n",
    "headers": {
      "server": "nginx/1.18.0 (Ubuntu)",
      "date": "Thu, 04 Sep 2025 07:38:56 GMT",
      "content-type": "text/html; charset=utf-8",
      "transfer-encoding": "chunked",
      "connection": "keep-alive",
      "vary": "Accept-Encoding, Cookie, origin",
      "allow": "GET, HEAD, OPTIONS",
      "x-frame-options": "DENY",
      "x-content-type-options": "nosniff",
      "referrer-policy": "same-origin",
      "cross-origin-opener-policy": "same-origin",
      "set-cookie": [
        "csrftoken=5cFS73t9v5uLelSovBL2sWdHy2AJ40aP; expires=Thu, 03 Sep 2026 07:38:56 GMT; Max-Age=31449600; Path=/; SameSite=Lax"
      ],
      "content-encoding": "gzip"
    }
  },
  "health": {
    "status": 404,
    "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /api/health/</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    \n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>https://api.medcor.ai/api/health/</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>medcor_backend2.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                admin/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/schema/\n                [name='schema']\n            \n          </li>\n        \n          <li>\n            \n                api/docs/\n                [name='swagger-ui']\n            \n          </li>\n        \n          <li>\n            \n                api/redoc/\n                [name='redoc']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/tenants/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/appointments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/medical-records/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/treatments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/subscription-plans/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/specialty/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/email/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^media/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^static/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n      </ol>\n      <p>\n        \n          The current path, <code>api/health/</code>,\n        \n        didn’t match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You’re seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n",
    "headers": {
      "server": "nginx/1.18.0 (Ubuntu)",
      "date": "Thu, 04 Sep 2025 07:38:57 GMT",
      "content-type": "text/html; charset=utf-8",
      "transfer-encoding": "chunked",
      "connection": "keep-alive",
      "vary": "Accept-Encoding, origin",
      "x-frame-options": "DENY",
      "x-content-type-options": "nosniff",
      "referrer-policy": "same-origin",
      "cross-origin-opener-policy": "same-origin",
      "content-encoding": "gzip"
    }
  },
  "root": {
    "status": 404,
    "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /api/</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    \n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>https://api.medcor.ai/api/</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>medcor_backend2.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                admin/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/schema/\n                [name='schema']\n            \n          </li>\n        \n          <li>\n            \n                api/docs/\n                [name='swagger-ui']\n            \n          </li>\n        \n          <li>\n            \n                api/redoc/\n                [name='redoc']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/tenants/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/appointments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/medical-records/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/treatments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/subscription-plans/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/specialty/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/email/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^media/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^static/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n      </ol>\n      <p>\n        \n          The current path, <code>api/</code>,\n        \n        didn’t match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You’re seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n",
    "headers": {
      "server": "nginx/1.18.0 (Ubuntu)",
      "date": "Thu, 04 Sep 2025 07:38:58 GMT",
      "content-type": "text/html; charset=utf-8",
      "transfer-encoding": "chunked",
      "connection": "keep-alive",
      "vary": "Accept-Encoding, origin",
      "x-frame-options": "DENY",
      "x-content-type-options": "nosniff",
      "referrer-policy": "same-origin",
      "cross-origin-opener-policy": "same-origin",
      "content-encoding": "gzip"
    }
  },
  "login": {
    "status": 200,
    "body": {
      "user": {
        "id": "04250761-8056-46bf-9030-419522f4baeb",
        "email": "zeynel@medcorhospital.com",
        "username": null,
        "first_name": "Zeynel",
        "last_name": "Savrum",
        "full_name": "Zeynel Savrum",
        "phone_number": "",
        "date_of_birth": null,
        "gender": "",
        "role": "SUPERADMIN",
        "hospital": null,
        "department": "",
        "specialization": "",
        "is_active": true,
        "is_verified": false,
        "created_at": "2025-08-20T21:28:55.573514Z",
        "updated_at": "2025-08-20T21:28:56.070942Z",
        "profile_picture": null,
        "bio": "",
        "preferred_language": "en",
        "timezone": "UTC",
        "doctor_specialties": null,
        "primary_specialty": null
      },
      "tokens": {
        "refresh": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTc1NzU3NjMzOSwiaWF0IjoxNzU2OTcxNTM5LCJqdGkiOiI1MzQwNzQwYWY2YjM0ZjI4Yjk4OTc5NTI3NzdjNmUzYSIsInVzZXJfaWQiOiIwNDI1MDc2MS04MDU2LTQ2YmYtOTAzMC00MTk1MjJmNGJhZWIifQ.SR516gUxLjeNsKGOCrzZbEWDl2JZBkKk5jtQVmREFLE",
        "access": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU2OTc1MTM5LCJpYXQiOjE3NTY5NzE1MzksImp0aSI6ImRmYzFhYTgxMTY0NzQwYTZhOGY2Y2VjMzljYTVmN2U0IiwidXNlcl9pZCI6IjA0MjUwNzYxLTgwNTYtNDZiZi05MDMwLTQxOTUyMmY0YmFlYiJ9.Q3kVwzJeACDcbWc11NHjpeOYJhNr3YTJ5I6KyJXM0zo"
      }
    },
    "headers": {
      "server": "nginx/1.18.0 (Ubuntu)",
      "date": "Thu, 04 Sep 2025 07:38:59 GMT",
      "content-type": "application/json",
      "transfer-encoding": "chunked",
      "connection": "keep-alive",
      "vary": "Accept-Encoding, Accept, Cookie, origin",
      "allow": "POST, OPTIONS",
      "x-frame-options": "DENY",
      "x-content-type-options": "nosniff",
      "referrer-policy": "same-origin",
      "cross-origin-opener-policy": "same-origin",
      "set-cookie": [
        "csrftoken=oTf03Qr26yOi5UtbAjUsGwslMT1paOCU; expires=Thu, 03 Sep 2026 07:38:59 GMT; Max-Age=31449600; Path=/; SameSite=Lax",
        "sessionid=ypou7dtf4tq4rnhyv6zfx7y9q46rzfeu; expires=Fri, 05 Sep 2025 07:38:59 GMT; HttpOnly; Max-Age=86400; Path=/; SameSite=Lax"
      ],
      "content-encoding": "gzip"
    }
  },
  "authRoot": {
    "status": 404,
    "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /api/auth/</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    \n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>https://api.medcor.ai/api/auth/</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>medcor_backend2.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                admin/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/schema/\n                [name='schema']\n            \n          </li>\n        \n          <li>\n            \n                api/docs/\n                [name='swagger-ui']\n            \n          </li>\n        \n          <li>\n            \n                api/redoc/\n                [name='redoc']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n                register/\n                [name='register']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n                login/\n                [name='login']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n                logout/\n                [name='logout']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n                token/refresh/\n                [name='token_refresh']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n                profile/\n                [name='profile']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n                change-password/\n                [name='change_password']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n                doctors/\n                [name='doctors']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n                patients/\n                [name='patients']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n                stats/\n                [name='user_stats']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n                health/\n                [name='health_check']\n            \n          </li>\n        \n          <li>\n            \n                api/tenants/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/appointments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/medical-records/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/treatments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/subscription-plans/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/specialty/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/email/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^media/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^static/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n      </ol>\n      <p>\n        \n          The current path, <code>api/auth/</code>,\n        \n        didn’t match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You’re seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n",
    "headers": {
      "server": "nginx/1.18.0 (Ubuntu)",
      "date": "Thu, 04 Sep 2025 07:38:59 GMT",
      "content-type": "text/html; charset=utf-8",
      "transfer-encoding": "chunked",
      "connection": "keep-alive",
      "vary": "Accept-Encoding, origin",
      "x-frame-options": "DENY",
      "x-content-type-options": "nosniff",
      "referrer-policy": "same-origin",
      "cross-origin-opener-policy": "same-origin",
      "content-encoding": "gzip"
    }
  },
  "endpoints": {
    "/api/users/": {
      "status": 404,
      "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /api/users/</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    \n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>https://api.medcor.ai/api/users/</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>medcor_backend2.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                admin/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/schema/\n                [name='schema']\n            \n          </li>\n        \n          <li>\n            \n                api/docs/\n                [name='swagger-ui']\n            \n          </li>\n        \n          <li>\n            \n                api/redoc/\n                [name='redoc']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/tenants/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/appointments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/medical-records/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/treatments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/subscription-plans/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/specialty/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/email/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^media/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^static/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n      </ol>\n      <p>\n        \n          The current path, <code>api/users/</code>,\n        \n        didn’t match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You’re seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n",
      "headers": {
        "server": "nginx/1.18.0 (Ubuntu)",
        "date": "Thu, 04 Sep 2025 07:39:00 GMT",
        "content-type": "text/html; charset=utf-8",
        "transfer-encoding": "chunked",
        "connection": "keep-alive",
        "vary": "Accept-Encoding, origin",
        "x-frame-options": "DENY",
        "x-content-type-options": "nosniff",
        "referrer-policy": "same-origin",
        "cross-origin-opener-policy": "same-origin",
        "content-encoding": "gzip"
      }
    },
    "/api/patients/": {
      "status": 404,
      "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /api/patients/</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    \n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>https://api.medcor.ai/api/patients/</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>medcor_backend2.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                admin/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/schema/\n                [name='schema']\n            \n          </li>\n        \n          <li>\n            \n                api/docs/\n                [name='swagger-ui']\n            \n          </li>\n        \n          <li>\n            \n                api/redoc/\n                [name='redoc']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/tenants/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/appointments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/medical-records/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/treatments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/subscription-plans/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/specialty/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/email/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^media/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^static/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n      </ol>\n      <p>\n        \n          The current path, <code>api/patients/</code>,\n        \n        didn’t match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You’re seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n",
      "headers": {
        "server": "nginx/1.18.0 (Ubuntu)",
        "date": "Thu, 04 Sep 2025 07:39:01 GMT",
        "content-type": "text/html; charset=utf-8",
        "transfer-encoding": "chunked",
        "connection": "keep-alive",
        "vary": "Accept-Encoding, origin",
        "x-frame-options": "DENY",
        "x-content-type-options": "nosniff",
        "referrer-policy": "same-origin",
        "cross-origin-opener-policy": "same-origin",
        "content-encoding": "gzip"
      }
    },
    "/api/doctors/": {
      "status": 404,
      "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /api/doctors/</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    \n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>https://api.medcor.ai/api/doctors/</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>medcor_backend2.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                admin/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/schema/\n                [name='schema']\n            \n          </li>\n        \n          <li>\n            \n                api/docs/\n                [name='swagger-ui']\n            \n          </li>\n        \n          <li>\n            \n                api/redoc/\n                [name='redoc']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/tenants/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/appointments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/medical-records/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/treatments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/subscription-plans/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/specialty/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/email/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^media/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^static/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n      </ol>\n      <p>\n        \n          The current path, <code>api/doctors/</code>,\n        \n        didn’t match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You’re seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n",
      "headers": {
        "server": "nginx/1.18.0 (Ubuntu)",
        "date": "Thu, 04 Sep 2025 07:39:01 GMT",
        "content-type": "text/html; charset=utf-8",
        "transfer-encoding": "chunked",
        "connection": "keep-alive",
        "vary": "Accept-Encoding, origin",
        "x-frame-options": "DENY",
        "x-content-type-options": "nosniff",
        "referrer-policy": "same-origin",
        "cross-origin-opener-policy": "same-origin",
        "content-encoding": "gzip"
      }
    },
    "/api/appointments/": {
      "status": 401,
      "body": {
        "detail": "Authentication credentials were not provided."
      },
      "headers": {
        "server": "nginx/1.18.0 (Ubuntu)",
        "date": "Thu, 04 Sep 2025 07:39:02 GMT",
        "content-type": "application/json",
        "content-length": "58",
        "connection": "keep-alive",
        "www-authenticate": "Bearer realm=\"api\"",
        "vary": "Accept, origin",
        "allow": "GET, HEAD, OPTIONS",
        "x-frame-options": "DENY",
        "x-content-type-options": "nosniff",
        "referrer-policy": "same-origin",
        "cross-origin-opener-policy": "same-origin"
      }
    },
    "/api/medical-records/": {
      "status": 401,
      "body": {
        "detail": "Authentication credentials were not provided."
      },
      "headers": {
        "server": "nginx/1.18.0 (Ubuntu)",
        "date": "Thu, 04 Sep 2025 07:39:02 GMT",
        "content-type": "application/json",
        "content-length": "58",
        "connection": "keep-alive",
        "www-authenticate": "Bearer realm=\"api\"",
        "vary": "Accept, origin",
        "allow": "GET, HEAD, OPTIONS",
        "x-frame-options": "DENY",
        "x-content-type-options": "nosniff",
        "referrer-policy": "same-origin",
        "cross-origin-opener-policy": "same-origin"
      }
    },
    "/api/treatments/": {
      "status": 401,
      "body": {
        "detail": "Authentication credentials were not provided."
      },
      "headers": {
        "server": "nginx/1.18.0 (Ubuntu)",
        "date": "Thu, 04 Sep 2025 07:39:03 GMT",
        "content-type": "application/json",
        "content-length": "58",
        "connection": "keep-alive",
        "www-authenticate": "Bearer realm=\"api\"",
        "vary": "Accept, origin",
        "allow": "GET, HEAD, OPTIONS",
        "x-frame-options": "DENY",
        "x-content-type-options": "nosniff",
        "referrer-policy": "same-origin",
        "cross-origin-opener-policy": "same-origin"
      }
    },
    "/api/specialties/": {
      "status": 404,
      "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /api/specialties/</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    \n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>https://api.medcor.ai/api/specialties/</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>medcor_backend2.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                admin/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/schema/\n                [name='schema']\n            \n          </li>\n        \n          <li>\n            \n                api/docs/\n                [name='swagger-ui']\n            \n          </li>\n        \n          <li>\n            \n                api/redoc/\n                [name='redoc']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/tenants/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/appointments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/medical-records/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/treatments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/subscription-plans/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/specialty/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/email/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^media/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^static/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n      </ol>\n      <p>\n        \n          The current path, <code>api/specialties/</code>,\n        \n        didn’t match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You’re seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n",
      "headers": {
        "server": "nginx/1.18.0 (Ubuntu)",
        "date": "Thu, 04 Sep 2025 07:39:04 GMT",
        "content-type": "text/html; charset=utf-8",
        "transfer-encoding": "chunked",
        "connection": "keep-alive",
        "vary": "Accept-Encoding, origin",
        "x-frame-options": "DENY",
        "x-content-type-options": "nosniff",
        "referrer-policy": "same-origin",
        "cross-origin-opener-policy": "same-origin",
        "content-encoding": "gzip"
      }
    },
    "/api/clinics/": {
      "status": 404,
      "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /api/clinics/</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    \n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>https://api.medcor.ai/api/clinics/</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>medcor_backend2.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                admin/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/schema/\n                [name='schema']\n            \n          </li>\n        \n          <li>\n            \n                api/docs/\n                [name='swagger-ui']\n            \n          </li>\n        \n          <li>\n            \n                api/redoc/\n                [name='redoc']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/tenants/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/appointments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/medical-records/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/treatments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/subscription-plans/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/specialty/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/email/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^media/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^static/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n      </ol>\n      <p>\n        \n          The current path, <code>api/clinics/</code>,\n        \n        didn’t match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You’re seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n",
      "headers": {
        "server": "nginx/1.18.0 (Ubuntu)",
        "date": "Thu, 04 Sep 2025 07:39:05 GMT",
        "content-type": "text/html; charset=utf-8",
        "transfer-encoding": "chunked",
        "connection": "keep-alive",
        "vary": "Accept-Encoding, origin",
        "x-frame-options": "DENY",
        "x-content-type-options": "nosniff",
        "referrer-policy": "same-origin",
        "cross-origin-opener-policy": "same-origin",
        "content-encoding": "gzip"
      }
    },
    "/api/hospitals/": {
      "status": 404,
      "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /api/hospitals/</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    \n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>https://api.medcor.ai/api/hospitals/</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>medcor_backend2.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                admin/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/schema/\n                [name='schema']\n            \n          </li>\n        \n          <li>\n            \n                api/docs/\n                [name='swagger-ui']\n            \n          </li>\n        \n          <li>\n            \n                api/redoc/\n                [name='redoc']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/tenants/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/appointments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/medical-records/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/treatments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/subscription-plans/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/specialty/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/email/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^media/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^static/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n      </ol>\n      <p>\n        \n          The current path, <code>api/hospitals/</code>,\n        \n        didn’t match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You’re seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n",
      "headers": {
        "server": "nginx/1.18.0 (Ubuntu)",
        "date": "Thu, 04 Sep 2025 07:39:06 GMT",
        "content-type": "text/html; charset=utf-8",
        "transfer-encoding": "chunked",
        "connection": "keep-alive",
        "vary": "Accept-Encoding, origin",
        "x-frame-options": "DENY",
        "x-content-type-options": "nosniff",
        "referrer-policy": "same-origin",
        "cross-origin-opener-policy": "same-origin",
        "content-encoding": "gzip"
      }
    },
    "/api/centers/": {
      "status": 404,
      "body": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n  <title>Page not found at /api/centers/</title>\n  <meta name=\"robots\" content=\"NONE,NOARCHIVE\">\n  <style type=\"text/css\">\n    html * { padding:0; margin:0; }\n    body * { padding:10px 20px; }\n    body * * { padding:0; }\n    body { font:small sans-serif; background:#eee; color:#000; }\n    body>div { border-bottom:1px solid #ddd; }\n    h1 { font-weight:normal; margin-bottom:.4em; }\n    h1 span { font-size:60%; color:#666; font-weight:normal; }\n    table { border:none; border-collapse: collapse; width:100%; }\n    td, th { vertical-align:top; padding:2px 3px; }\n    th { width:12em; text-align:right; color:#666; padding-right:.5em; }\n    #info { background:#f6f6f6; }\n    #info ol { margin: 0.5em 4em; }\n    #info ol li { font-family: monospace; }\n    #summary { background: #ffc; }\n    #explanation { background:#eee; border-bottom: 0px none; }\n    pre.exception_value { font-family: sans-serif; color: #575757; font-size: 1.5em; margin: 10px 0 10px 0; }\n  </style>\n</head>\n<body>\n  <div id=\"summary\">\n    <h1>Page not found <span>(404)</span></h1>\n    \n    <table class=\"meta\">\n      <tr>\n        <th>Request Method:</th>\n        <td>GET</td>\n      </tr>\n      <tr>\n        <th>Request URL:</th>\n        <td>https://api.medcor.ai/api/centers/</td>\n      </tr>\n      \n    </table>\n  </div>\n  <div id=\"info\">\n    \n      <p>\n      Using the URLconf defined in <code>medcor_backend2.urls</code>,\n      Django tried these URL patterns, in this order:\n      </p>\n      <ol>\n        \n          <li>\n            \n                admin/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/schema/\n                [name='schema']\n            \n          </li>\n        \n          <li>\n            \n                api/docs/\n                [name='swagger-ui']\n            \n          </li>\n        \n          <li>\n            \n                api/redoc/\n                [name='redoc']\n            \n          </li>\n        \n          <li>\n            \n                api/auth/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/tenants/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/appointments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/medical-records/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/treatments/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/subscription-plans/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/specialty/\n                \n            \n          </li>\n        \n          <li>\n            \n                api/email/\n                \n            \n          </li>\n        \n          <li>\n            \n                ^media/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n          <li>\n            \n                ^static/(?P&lt;path&gt;.*)$\n                \n            \n          </li>\n        \n      </ol>\n      <p>\n        \n          The current path, <code>api/centers/</code>,\n        \n        didn’t match any of these.\n      </p>\n    \n  </div>\n\n  <div id=\"explanation\">\n    <p>\n      You’re seeing this error because you have <code>DEBUG = True</code> in\n      your Django settings file. Change that to <code>False</code>, and Django\n      will display a standard 404 page.\n    </p>\n  </div>\n</body>\n</html>\n",
      "headers": {
        "server": "nginx/1.18.0 (Ubuntu)",
        "date": "Thu, 04 Sep 2025 07:39:06 GMT",
        "content-type": "text/html; charset=utf-8",
        "transfer-encoding": "chunked",
        "connection": "keep-alive",
        "vary": "Accept-Encoding, origin",
        "x-frame-options": "DENY",
        "x-content-type-options": "nosniff",
        "referrer-policy": "same-origin",
        "cross-origin-opener-policy": "same-origin",
        "content-encoding": "gzip"
      }
    }
  }
}