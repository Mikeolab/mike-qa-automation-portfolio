const fs = require('fs');
const path = require('path');
const puppeteer = require('puppeteer');
const { marked } = require('marked');

async function generatePDF() {
    try {
        // Read the markdown file
        const markdownContent = fs.readFileSync('Medcor_API_Complete_Comprehensive_Report.md', 'utf8');
        
        // Convert markdown to HTML
        const htmlContent = marked(markdownContent);
        
        // Create a complete HTML document with professional styling
        const fullHTML = `
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Medcor Healthcare Platform API - Test Report</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: white;
        }
        
        h1 {
            color: #2c3e50;
            border-bottom: 3px solid #3498db;
            padding-bottom: 10px;
            margin-bottom: 30px;
        }
        
        h2 {
            color: #34495e;
            border-bottom: 2px solid #ecf0f1;
            padding-bottom: 5px;
            margin-top: 30px;
        }
        
        h3 {
            color: #7f8c8d;
            margin-top: 25px;
        }
        
        table {
            width: 100%;
            border-collapse: collapse;
            margin: 20px 0;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        th, td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }
        
        th {
            background-color: #3498db;
            color: white;
            font-weight: bold;
        }
        
        tr:nth-child(even) {
            background-color: #f8f9fa;
        }
        
        tr:hover {
            background-color: #e3f2fd;
        }
        
        .status-pass {
            color: #27ae60;
            font-weight: bold;
        }
        
        .status-fail {
            color: #e74c3c;
            font-weight: bold;
        }
        
        .status-excellent {
            color: #2980b9;
            font-weight: bold;
        }
        
        code {
            background-color: #f4f4f4;
            padding: 2px 4px;
            border-radius: 3px;
            font-family: 'Courier New', monospace;
        }
        
        pre {
            background-color: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            overflow-x: auto;
            border-left: 4px solid #3498db;
        }
        
        blockquote {
            border-left: 4px solid #3498db;
            margin: 20px 0;
            padding-left: 20px;
            background-color: #f8f9fa;
            font-style: italic;
        }
        
        .executive-summary {
            background-color: #e8f5e8;
            padding: 20px;
            border-radius: 8px;
            border-left: 5px solid #27ae60;
            margin: 20px 0;
        }
        
        .metrics-box {
            background-color: #e3f2fd;
            padding: 15px;
            border-radius: 8px;
            border-left: 5px solid #3498db;
            margin: 15px 0;
        }
        
        .security-section {
            background-color: #fff3e0;
            padding: 15px;
            border-radius: 8px;
            border-left: 5px solid #ff9800;
            margin: 15px 0;
        }
        
        .conclusion {
            background-color: #f3e5f5;
            padding: 20px;
            border-radius: 8px;
            border-left: 5px solid #9c27b0;
            margin: 20px 0;
        }
        
        .footer {
            margin-top: 40px;
            padding-top: 20px;
            border-top: 1px solid #ecf0f1;
            text-align: center;
            color: #7f8c8d;
            font-size: 0.9em;
        }
        
        @media print {
            body {
                margin: 0;
                padding: 15px;
            }
            
            table {
                page-break-inside: avoid;
            }
            
            h1, h2, h3 {
                page-break-after: avoid;
            }
        }
    </style>
</head>
<body>
    ${htmlContent}
    <div class="footer">
        <p><strong>Generated by QA Automation Team</strong></p>
        <p>Medcor Healthcare Platform API Testing Suite</p>
        <p>Report Date: ${new Date().toLocaleDateString()}</p>
    </div>
</body>
</html>`;

        // Write HTML to temporary file
        fs.writeFileSync('temp-report.html', fullHTML);
        
        // Launch Puppeteer and generate PDF
        const browser = await puppeteer.launch({
            headless: true,
            args: ['--no-sandbox', '--disable-setuid-sandbox']
        });
        
        const page = await browser.newPage();
        await page.setContent(fullHTML);
        
        // Generate PDF with professional settings
        await page.pdf({
            path: 'Medcor_API_Complete_Comprehensive_Report.pdf',
            format: 'A4',
            margin: {
                top: '20mm',
                right: '20mm',
                bottom: '20mm',
                left: '20mm'
            },
            printBackground: true,
            displayHeaderFooter: true,
            headerTemplate: '<div style="font-size: 10px; text-align: center; width: 100%; color: #666;">Medcor Healthcare Platform API - Test Report</div>',
            footerTemplate: '<div style="font-size: 10px; text-align: center; width: 100%; color: #666;">Page <span class="pageNumber"></span> of <span class="totalPages"></span></div>'
        });
        
        await browser.close();
        
        // Clean up temporary file
        fs.unlinkSync('temp-report.html');
        
        console.log('✅ PDF report generated successfully: Medcor_API_Complete_Comprehensive_Report.pdf');
        
    } catch (error) {
        console.error('❌ Error generating PDF:', error);
    }
}

generatePDF();
